	//Histogram declaration and booking function for HLT_e120_lhloose
	virtual void Book_HLT_e120_lhloose(int bins, double min, double max);
	TH1F	*h_HLT_e120_lhloose;

	//Histogram declaration and booking function for HLT_e140_lhloose_nod0
	virtual void Book_HLT_e140_lhloose_nod0(int bins, double min, double max);
	TH1F	*h_HLT_e140_lhloose_nod0;

	//Histogram declaration and booking function for HLT_e17_lhmedium_nod0_iloose_tau25_medium1_tracktwo
	virtual void Book_HLT_e17_lhmedium_nod0_iloose_tau25_medium1_tracktwo(int bins, double min, double max);
	TH1F	*h_HLT_e17_lhmedium_nod0_iloose_tau25_medium1_tracktwo;

	//Histogram declaration and booking function for HLT_e17_lhmedium_nod0_ivarloose_tau25_medium1_tracktwo
	virtual void Book_HLT_e17_lhmedium_nod0_ivarloose_tau25_medium1_tracktwo(int bins, double min, double max);
	TH1F	*h_HLT_e17_lhmedium_nod0_ivarloose_tau25_medium1_tracktwo;

	//Histogram declaration and booking function for HLT_e17_lhmedium_nod0_tau25_medium1_tracktwo
	virtual void Book_HLT_e17_lhmedium_nod0_tau25_medium1_tracktwo(int bins, double min, double max);
	TH1F	*h_HLT_e17_lhmedium_nod0_tau25_medium1_tracktwo;

	//Histogram declaration and booking function for HLT_e24_lhmedium_L1EM20VH
	virtual void Book_HLT_e24_lhmedium_L1EM20VH(int bins, double min, double max);
	TH1F	*h_HLT_e24_lhmedium_L1EM20VH;

	//Histogram declaration and booking function for HLT_e24_lhmedium_nod0_L1EM20VH
	virtual void Book_HLT_e24_lhmedium_nod0_L1EM20VH(int bins, double min, double max);
	TH1F	*h_HLT_e24_lhmedium_nod0_L1EM20VH;

	//Histogram declaration and booking function for HLT_e24_lhtight_nod0_ivarloose
	virtual void Book_HLT_e24_lhtight_nod0_ivarloose(int bins, double min, double max);
	TH1F	*h_HLT_e24_lhtight_nod0_ivarloose;

	//Histogram declaration and booking function for HLT_e26_lhtight_nod0_ivarloose
	virtual void Book_HLT_e26_lhtight_nod0_ivarloose(int bins, double min, double max);
	TH1F	*h_HLT_e26_lhtight_nod0_ivarloose;

	//Histogram declaration and booking function for HLT_e60_lhmedium
	virtual void Book_HLT_e60_lhmedium(int bins, double min, double max);
	TH1F	*h_HLT_e60_lhmedium;

	//Histogram declaration and booking function for HLT_e60_lhmedium_nod0
	virtual void Book_HLT_e60_lhmedium_nod0(int bins, double min, double max);
	TH1F	*h_HLT_e60_lhmedium_nod0;

	//Histogram declaration and booking function for HLT_mu20_iloose_L1MU15
	virtual void Book_HLT_mu20_iloose_L1MU15(int bins, double min, double max);
	TH1F	*h_HLT_mu20_iloose_L1MU15;

	//Histogram declaration and booking function for HLT_mu24_imedium
	virtual void Book_HLT_mu24_imedium(int bins, double min, double max);
	TH1F	*h_HLT_mu24_imedium;

	//Histogram declaration and booking function for HLT_mu24_ivarmedium
	virtual void Book_HLT_mu24_ivarmedium(int bins, double min, double max);
	TH1F	*h_HLT_mu24_ivarmedium;

	//Histogram declaration and booking function for HLT_mu26_imedium
	virtual void Book_HLT_mu26_imedium(int bins, double min, double max);
	TH1F	*h_HLT_mu26_imedium;

	//Histogram declaration and booking function for HLT_mu26_ivarmedium
	virtual void Book_HLT_mu26_ivarmedium(int bins, double min, double max);
	TH1F	*h_HLT_mu26_ivarmedium;

	//Histogram declaration and booking function for HLT_mu40
	virtual void Book_HLT_mu40(int bins, double min, double max);
	TH1F	*h_HLT_mu40;

	//Histogram declaration and booking function for HLT_mu50
	virtual void Book_HLT_mu50(int bins, double min, double max);
	TH1F	*h_HLT_mu50;

	//Histogram declaration and booking function for NOMINAL_pileup_combined_weight
	virtual void Book_NOMINAL_pileup_combined_weight(int bins, double min, double max);
	TH1F	*h_NOMINAL_pileup_combined_weight;

	//Histogram declaration and booking function for NOMINAL_pileup_random_run_number
	virtual void Book_NOMINAL_pileup_random_run_number(int bins, double min, double max);
	TH1F	*h_NOMINAL_pileup_random_run_number;

	//Histogram declaration and booking function for bjet_0
	virtual void Book_bjet_0(int bins, double min, double max);
	TH1F	*h_bjet_0;

	//Histogram declaration and booking function for bjet_0_NOMINAL_central_jets_effSF_JVT
	virtual void Book_bjet_0_NOMINAL_central_jets_effSF_JVT(int bins, double min, double max);
	TH1F	*h_bjet_0_NOMINAL_central_jets_effSF_JVT;

	//Histogram declaration and booking function for bjet_0_NOMINAL_central_jets_ineffSF_JVT
	virtual void Book_bjet_0_NOMINAL_central_jets_ineffSF_JVT(int bins, double min, double max);
	TH1F	*h_bjet_0_NOMINAL_central_jets_ineffSF_JVT;

	//Histogram declaration and booking function for bjet_0_NOMINAL_effSF_MV2c10
	virtual void Book_bjet_0_NOMINAL_effSF_MV2c10(int bins, double min, double max);
	TH1F	*h_bjet_0_NOMINAL_effSF_MV2c10;

	//Histogram declaration and booking function for bjet_0_NOMINAL_forward_jets_effSF_JVT
	virtual void Book_bjet_0_NOMINAL_forward_jets_effSF_JVT(int bins, double min, double max);
	TH1F	*h_bjet_0_NOMINAL_forward_jets_effSF_JVT;

	//Histogram declaration and booking function for bjet_0_NOMINAL_forward_jets_ineffSF_JVT
	virtual void Book_bjet_0_NOMINAL_forward_jets_ineffSF_JVT(int bins, double min, double max);
	TH1F	*h_bjet_0_NOMINAL_forward_jets_ineffSF_JVT;

	//Histogram declaration and booking function for bjet_0_NOMINAL_ineffSF_MV2c10
	virtual void Book_bjet_0_NOMINAL_ineffSF_MV2c10(int bins, double min, double max);
	TH1F	*h_bjet_0_NOMINAL_ineffSF_MV2c10;

	//Histogram declaration and booking function for bjet_0_b_tag_quantile
	virtual void Book_bjet_0_b_tag_quantile(int bins, double min, double max);
	TH1F	*h_bjet_0_b_tag_quantile;

	//Histogram declaration and booking function for bjet_0_b_tag_score
	virtual void Book_bjet_0_b_tag_score(int bins, double min, double max);
	TH1F	*h_bjet_0_b_tag_score;

	//Histogram declaration and booking function for bjet_0_b_tagged
	virtual void Book_bjet_0_b_tagged(int bins, double min, double max);
	TH1F	*h_bjet_0_b_tagged;

	//Histogram declaration and booking function for bjet_0_fjvt
	virtual void Book_bjet_0_fjvt(int bins, double min, double max);
	TH1F	*h_bjet_0_fjvt;

	//Histogram declaration and booking function for bjet_0_flavorlabel
	virtual void Book_bjet_0_flavorlabel(int bins, double min, double max);
	TH1F	*h_bjet_0_flavorlabel;

	//Histogram declaration and booking function for bjet_0_flavorlabel_cone
	virtual void Book_bjet_0_flavorlabel_cone(int bins, double min, double max);
	TH1F	*h_bjet_0_flavorlabel_cone;

	//Histogram declaration and booking function for bjet_0_flavorlabel_part
	virtual void Book_bjet_0_flavorlabel_part(int bins, double min, double max);
	TH1F	*h_bjet_0_flavorlabel_part;

	//Histogram declaration and booking function for bjet_0_is_Jvt_HS
	virtual void Book_bjet_0_is_Jvt_HS(int bins, double min, double max);
	TH1F	*h_bjet_0_is_Jvt_HS;

	//Histogram declaration and booking function for bjet_0_jvt
	virtual void Book_bjet_0_jvt(int bins, double min, double max);
	TH1F	*h_bjet_0_jvt;

	//Histogram declaration and booking function for bjet_0_matched
	virtual void Book_bjet_0_matched(int bins, double min, double max);
	TH1F	*h_bjet_0_matched;

	//Histogram declaration and booking function for bjet_0_matched_mother_pdgId
	virtual void Book_bjet_0_matched_mother_pdgId(int bins, double min, double max);
	TH1F	*h_bjet_0_matched_mother_pdgId;

	//Histogram declaration and booking function for bjet_0_matched_mother_status
	virtual void Book_bjet_0_matched_mother_status(int bins, double min, double max);
	TH1F	*h_bjet_0_matched_mother_status;

	//Histogram declaration and booking function for bjet_0_matched_origin
	virtual void Book_bjet_0_matched_origin(int bins, double min, double max);
	TH1F	*h_bjet_0_matched_origin;

	//Histogram declaration and booking function for bjet_0_matched_pdgId
	virtual void Book_bjet_0_matched_pdgId(int bins, double min, double max);
	TH1F	*h_bjet_0_matched_pdgId;

	//Histogram declaration and booking function for bjet_0_matched_q
	virtual void Book_bjet_0_matched_q(int bins, double min, double max);
	TH1F	*h_bjet_0_matched_q;

	//Histogram declaration and booking function for bjet_0_matched_status
	virtual void Book_bjet_0_matched_status(int bins, double min, double max);
	TH1F	*h_bjet_0_matched_status;

	//Histogram declaration and booking function for bjet_0_matched_type
	virtual void Book_bjet_0_matched_type(int bins, double min, double max);
	TH1F	*h_bjet_0_matched_type;

	//Histogram declaration and booking function for bjet_0_origin
	virtual void Book_bjet_0_origin(int bins, double min, double max);
	TH1F	*h_bjet_0_origin;

	//Histogram declaration and booking function for bjet_0_q
	virtual void Book_bjet_0_q(int bins, double min, double max);
	TH1F	*h_bjet_0_q;

	//Histogram declaration and booking function for bjet_0_type
	virtual void Book_bjet_0_type(int bins, double min, double max);
	TH1F	*h_bjet_0_type;

	//Histogram declaration and booking function for bjet_0_width
	virtual void Book_bjet_0_width(int bins, double min, double max);
	TH1F	*h_bjet_0_width;

	//Histogram declaration and booking function for bjet_1
	virtual void Book_bjet_1(int bins, double min, double max);
	TH1F	*h_bjet_1;

	//Histogram declaration and booking function for bjet_1_NOMINAL_central_jets_effSF_JVT
	virtual void Book_bjet_1_NOMINAL_central_jets_effSF_JVT(int bins, double min, double max);
	TH1F	*h_bjet_1_NOMINAL_central_jets_effSF_JVT;

	//Histogram declaration and booking function for bjet_1_NOMINAL_central_jets_ineffSF_JVT
	virtual void Book_bjet_1_NOMINAL_central_jets_ineffSF_JVT(int bins, double min, double max);
	TH1F	*h_bjet_1_NOMINAL_central_jets_ineffSF_JVT;

	//Histogram declaration and booking function for bjet_1_NOMINAL_effSF_MV2c10
	virtual void Book_bjet_1_NOMINAL_effSF_MV2c10(int bins, double min, double max);
	TH1F	*h_bjet_1_NOMINAL_effSF_MV2c10;

	//Histogram declaration and booking function for bjet_1_NOMINAL_forward_jets_effSF_JVT
	virtual void Book_bjet_1_NOMINAL_forward_jets_effSF_JVT(int bins, double min, double max);
	TH1F	*h_bjet_1_NOMINAL_forward_jets_effSF_JVT;

	//Histogram declaration and booking function for bjet_1_NOMINAL_forward_jets_ineffSF_JVT
	virtual void Book_bjet_1_NOMINAL_forward_jets_ineffSF_JVT(int bins, double min, double max);
	TH1F	*h_bjet_1_NOMINAL_forward_jets_ineffSF_JVT;

	//Histogram declaration and booking function for bjet_1_NOMINAL_ineffSF_MV2c10
	virtual void Book_bjet_1_NOMINAL_ineffSF_MV2c10(int bins, double min, double max);
	TH1F	*h_bjet_1_NOMINAL_ineffSF_MV2c10;

	//Histogram declaration and booking function for bjet_1_b_tag_quantile
	virtual void Book_bjet_1_b_tag_quantile(int bins, double min, double max);
	TH1F	*h_bjet_1_b_tag_quantile;

	//Histogram declaration and booking function for bjet_1_b_tag_score
	virtual void Book_bjet_1_b_tag_score(int bins, double min, double max);
	TH1F	*h_bjet_1_b_tag_score;

	//Histogram declaration and booking function for bjet_1_b_tagged
	virtual void Book_bjet_1_b_tagged(int bins, double min, double max);
	TH1F	*h_bjet_1_b_tagged;

	//Histogram declaration and booking function for bjet_1_fjvt
	virtual void Book_bjet_1_fjvt(int bins, double min, double max);
	TH1F	*h_bjet_1_fjvt;

	//Histogram declaration and booking function for bjet_1_flavorlabel
	virtual void Book_bjet_1_flavorlabel(int bins, double min, double max);
	TH1F	*h_bjet_1_flavorlabel;

	//Histogram declaration and booking function for bjet_1_flavorlabel_cone
	virtual void Book_bjet_1_flavorlabel_cone(int bins, double min, double max);
	TH1F	*h_bjet_1_flavorlabel_cone;

	//Histogram declaration and booking function for bjet_1_flavorlabel_part
	virtual void Book_bjet_1_flavorlabel_part(int bins, double min, double max);
	TH1F	*h_bjet_1_flavorlabel_part;

	//Histogram declaration and booking function for bjet_1_is_Jvt_HS
	virtual void Book_bjet_1_is_Jvt_HS(int bins, double min, double max);
	TH1F	*h_bjet_1_is_Jvt_HS;

	//Histogram declaration and booking function for bjet_1_jvt
	virtual void Book_bjet_1_jvt(int bins, double min, double max);
	TH1F	*h_bjet_1_jvt;

	//Histogram declaration and booking function for bjet_1_matched
	virtual void Book_bjet_1_matched(int bins, double min, double max);
	TH1F	*h_bjet_1_matched;

	//Histogram declaration and booking function for bjet_1_matched_mother_pdgId
	virtual void Book_bjet_1_matched_mother_pdgId(int bins, double min, double max);
	TH1F	*h_bjet_1_matched_mother_pdgId;

	//Histogram declaration and booking function for bjet_1_matched_mother_status
	virtual void Book_bjet_1_matched_mother_status(int bins, double min, double max);
	TH1F	*h_bjet_1_matched_mother_status;

	//Histogram declaration and booking function for bjet_1_matched_origin
	virtual void Book_bjet_1_matched_origin(int bins, double min, double max);
	TH1F	*h_bjet_1_matched_origin;

	//Histogram declaration and booking function for bjet_1_matched_pdgId
	virtual void Book_bjet_1_matched_pdgId(int bins, double min, double max);
	TH1F	*h_bjet_1_matched_pdgId;

	//Histogram declaration and booking function for bjet_1_matched_q
	virtual void Book_bjet_1_matched_q(int bins, double min, double max);
	TH1F	*h_bjet_1_matched_q;

	//Histogram declaration and booking function for bjet_1_matched_status
	virtual void Book_bjet_1_matched_status(int bins, double min, double max);
	TH1F	*h_bjet_1_matched_status;

	//Histogram declaration and booking function for bjet_1_matched_type
	virtual void Book_bjet_1_matched_type(int bins, double min, double max);
	TH1F	*h_bjet_1_matched_type;

	//Histogram declaration and booking function for bjet_1_origin
	virtual void Book_bjet_1_origin(int bins, double min, double max);
	TH1F	*h_bjet_1_origin;

	//Histogram declaration and booking function for bjet_1_q
	virtual void Book_bjet_1_q(int bins, double min, double max);
	TH1F	*h_bjet_1_q;

	//Histogram declaration and booking function for bjet_1_type
	virtual void Book_bjet_1_type(int bins, double min, double max);
	TH1F	*h_bjet_1_type;

	//Histogram declaration and booking function for bjet_1_width
	virtual void Book_bjet_1_width(int bins, double min, double max);
	TH1F	*h_bjet_1_width;

	//Histogram declaration and booking function for eleTrigMatch_0_HLT_e120_lhloose
	virtual void Book_eleTrigMatch_0_HLT_e120_lhloose(int bins, double min, double max);
	TH1F	*h_eleTrigMatch_0_HLT_e120_lhloose;

	//Histogram declaration and booking function for eleTrigMatch_0_HLT_e140_lhloose_nod0
	virtual void Book_eleTrigMatch_0_HLT_e140_lhloose_nod0(int bins, double min, double max);
	TH1F	*h_eleTrigMatch_0_HLT_e140_lhloose_nod0;

	//Histogram declaration and booking function for eleTrigMatch_0_HLT_e17_lhmedium_nod0_iloose_tau25_medium1_tracktwo
	virtual void Book_eleTrigMatch_0_HLT_e17_lhmedium_nod0_iloose_tau25_medium1_tracktwo(int bins, double min, double max);
	TH1F	*h_eleTrigMatch_0_HLT_e17_lhmedium_nod0_iloose_tau25_medium1_tracktwo;

	//Histogram declaration and booking function for eleTrigMatch_0_HLT_e17_lhmedium_nod0_ivarloose_tau25_medium1_tracktwo
	virtual void Book_eleTrigMatch_0_HLT_e17_lhmedium_nod0_ivarloose_tau25_medium1_tracktwo(int bins, double min, double max);
	TH1F	*h_eleTrigMatch_0_HLT_e17_lhmedium_nod0_ivarloose_tau25_medium1_tracktwo;

	//Histogram declaration and booking function for eleTrigMatch_0_HLT_e17_lhmedium_nod0_tau25_medium1_tracktwo
	virtual void Book_eleTrigMatch_0_HLT_e17_lhmedium_nod0_tau25_medium1_tracktwo(int bins, double min, double max);
	TH1F	*h_eleTrigMatch_0_HLT_e17_lhmedium_nod0_tau25_medium1_tracktwo;

	//Histogram declaration and booking function for eleTrigMatch_0_HLT_e24_lhmedium_L1EM20VH
	virtual void Book_eleTrigMatch_0_HLT_e24_lhmedium_L1EM20VH(int bins, double min, double max);
	TH1F	*h_eleTrigMatch_0_HLT_e24_lhmedium_L1EM20VH;

	//Histogram declaration and booking function for eleTrigMatch_0_HLT_e24_lhmedium_nod0_L1EM20VH
	virtual void Book_eleTrigMatch_0_HLT_e24_lhmedium_nod0_L1EM20VH(int bins, double min, double max);
	TH1F	*h_eleTrigMatch_0_HLT_e24_lhmedium_nod0_L1EM20VH;

	//Histogram declaration and booking function for eleTrigMatch_0_HLT_e24_lhtight_nod0_ivarloose
	virtual void Book_eleTrigMatch_0_HLT_e24_lhtight_nod0_ivarloose(int bins, double min, double max);
	TH1F	*h_eleTrigMatch_0_HLT_e24_lhtight_nod0_ivarloose;

	//Histogram declaration and booking function for eleTrigMatch_0_HLT_e26_lhtight_nod0_ivarloose
	virtual void Book_eleTrigMatch_0_HLT_e26_lhtight_nod0_ivarloose(int bins, double min, double max);
	TH1F	*h_eleTrigMatch_0_HLT_e26_lhtight_nod0_ivarloose;

	//Histogram declaration and booking function for eleTrigMatch_0_HLT_e60_lhmedium
	virtual void Book_eleTrigMatch_0_HLT_e60_lhmedium(int bins, double min, double max);
	TH1F	*h_eleTrigMatch_0_HLT_e60_lhmedium;

	//Histogram declaration and booking function for eleTrigMatch_0_HLT_e60_lhmedium_nod0
	virtual void Book_eleTrigMatch_0_HLT_e60_lhmedium_nod0(int bins, double min, double max);
	TH1F	*h_eleTrigMatch_0_HLT_e60_lhmedium_nod0;

	//Histogram declaration and booking function for eleTrigMatch_0_trigger_matched
	virtual void Book_eleTrigMatch_0_trigger_matched(int bins, double min, double max);
	TH1F	*h_eleTrigMatch_0_trigger_matched;

	//Histogram declaration and booking function for eleTrigMatch_1_HLT_e120_lhloose
	virtual void Book_eleTrigMatch_1_HLT_e120_lhloose(int bins, double min, double max);
	TH1F	*h_eleTrigMatch_1_HLT_e120_lhloose;

	//Histogram declaration and booking function for eleTrigMatch_1_HLT_e140_lhloose_nod0
	virtual void Book_eleTrigMatch_1_HLT_e140_lhloose_nod0(int bins, double min, double max);
	TH1F	*h_eleTrigMatch_1_HLT_e140_lhloose_nod0;

	//Histogram declaration and booking function for eleTrigMatch_1_HLT_e17_lhmedium_nod0_iloose_tau25_medium1_tracktwo
	virtual void Book_eleTrigMatch_1_HLT_e17_lhmedium_nod0_iloose_tau25_medium1_tracktwo(int bins, double min, double max);
	TH1F	*h_eleTrigMatch_1_HLT_e17_lhmedium_nod0_iloose_tau25_medium1_tracktwo;

	//Histogram declaration and booking function for eleTrigMatch_1_HLT_e17_lhmedium_nod0_ivarloose_tau25_medium1_tracktwo
	virtual void Book_eleTrigMatch_1_HLT_e17_lhmedium_nod0_ivarloose_tau25_medium1_tracktwo(int bins, double min, double max);
	TH1F	*h_eleTrigMatch_1_HLT_e17_lhmedium_nod0_ivarloose_tau25_medium1_tracktwo;

	//Histogram declaration and booking function for eleTrigMatch_1_HLT_e17_lhmedium_nod0_tau25_medium1_tracktwo
	virtual void Book_eleTrigMatch_1_HLT_e17_lhmedium_nod0_tau25_medium1_tracktwo(int bins, double min, double max);
	TH1F	*h_eleTrigMatch_1_HLT_e17_lhmedium_nod0_tau25_medium1_tracktwo;

	//Histogram declaration and booking function for eleTrigMatch_1_HLT_e24_lhmedium_L1EM20VH
	virtual void Book_eleTrigMatch_1_HLT_e24_lhmedium_L1EM20VH(int bins, double min, double max);
	TH1F	*h_eleTrigMatch_1_HLT_e24_lhmedium_L1EM20VH;

	//Histogram declaration and booking function for eleTrigMatch_1_HLT_e24_lhmedium_nod0_L1EM20VH
	virtual void Book_eleTrigMatch_1_HLT_e24_lhmedium_nod0_L1EM20VH(int bins, double min, double max);
	TH1F	*h_eleTrigMatch_1_HLT_e24_lhmedium_nod0_L1EM20VH;

	//Histogram declaration and booking function for eleTrigMatch_1_HLT_e24_lhtight_nod0_ivarloose
	virtual void Book_eleTrigMatch_1_HLT_e24_lhtight_nod0_ivarloose(int bins, double min, double max);
	TH1F	*h_eleTrigMatch_1_HLT_e24_lhtight_nod0_ivarloose;

	//Histogram declaration and booking function for eleTrigMatch_1_HLT_e26_lhtight_nod0_ivarloose
	virtual void Book_eleTrigMatch_1_HLT_e26_lhtight_nod0_ivarloose(int bins, double min, double max);
	TH1F	*h_eleTrigMatch_1_HLT_e26_lhtight_nod0_ivarloose;

	//Histogram declaration and booking function for eleTrigMatch_1_HLT_e60_lhmedium
	virtual void Book_eleTrigMatch_1_HLT_e60_lhmedium(int bins, double min, double max);
	TH1F	*h_eleTrigMatch_1_HLT_e60_lhmedium;

	//Histogram declaration and booking function for eleTrigMatch_1_HLT_e60_lhmedium_nod0
	virtual void Book_eleTrigMatch_1_HLT_e60_lhmedium_nod0(int bins, double min, double max);
	TH1F	*h_eleTrigMatch_1_HLT_e60_lhmedium_nod0;

	//Histogram declaration and booking function for eleTrigMatch_1_trigger_matched
	virtual void Book_eleTrigMatch_1_trigger_matched(int bins, double min, double max);
	TH1F	*h_eleTrigMatch_1_trigger_matched;

	//Histogram declaration and booking function for elec_0
	virtual void Book_elec_0(int bins, double min, double max);
	TH1F	*h_elec_0;

	//Histogram declaration and booking function for elec_0_NOMINAL_EleEffSF_Isolation_MediumLLH_d0z0_v13_isolGradient
	virtual void Book_elec_0_NOMINAL_EleEffSF_Isolation_MediumLLH_d0z0_v13_isolGradient(int bins, double min, double max);
	TH1F	*h_elec_0_NOMINAL_EleEffSF_Isolation_MediumLLH_d0z0_v13_isolGradient;

	//Histogram declaration and booking function for elec_0_NOMINAL_EleEffSF_SINGLE_E_2015_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_2016_2017_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0_MediumLLH_d0z0_v13_isolFixedCutTight
	virtual void Book_elec_0_NOMINAL_EleEffSF_SINGLE_E_2015_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_2016_2017_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0_MediumLLH_d0z0_v13_isolFixedCutTight(int bins, double min, double max);
	TH1F	*h_elec_0_NOMINAL_EleEffSF_SINGLE_E_2015_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_2016_2017_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0_MediumLLH_d0z0_v13_isolFixedCutTight;

	//Histogram declaration and booking function for elec_0_NOMINAL_EleEffSF_SINGLE_E_2015_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_2016_2017_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0_MediumLLH_d0z0_v13_isolGradientLoose
	virtual void Book_elec_0_NOMINAL_EleEffSF_SINGLE_E_2015_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_2016_2017_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0_MediumLLH_d0z0_v13_isolGradientLoose(int bins, double min, double max);
	TH1F	*h_elec_0_NOMINAL_EleEffSF_SINGLE_E_2015_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_2016_2017_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0_MediumLLH_d0z0_v13_isolGradientLoose;

	//Histogram declaration and booking function for elec_0_NOMINAL_EleEffSF_offline_MediumLLH_d0z0_v13
	virtual void Book_elec_0_NOMINAL_EleEffSF_offline_MediumLLH_d0z0_v13(int bins, double min, double max);
	TH1F	*h_elec_0_NOMINAL_EleEffSF_offline_MediumLLH_d0z0_v13;

	//Histogram declaration and booking function for elec_0_NOMINAL_EleEffSF_offline_RecoTrk
	virtual void Book_elec_0_NOMINAL_EleEffSF_offline_RecoTrk(int bins, double min, double max);
	TH1F	*h_elec_0_NOMINAL_EleEffSF_offline_RecoTrk;

	//Histogram declaration and booking function for elec_0_PLI_score
	virtual void Book_elec_0_PLI_score(int bins, double min, double max);
	TH1F	*h_elec_0_PLI_score;

	//Histogram declaration and booking function for elec_0_PLV_score
	virtual void Book_elec_0_PLV_score(int bins, double min, double max);
	TH1F	*h_elec_0_PLV_score;

	//Histogram declaration and booking function for elec_0_cluster_eta
	virtual void Book_elec_0_cluster_eta(int bins, double min, double max);
	TH1F	*h_elec_0_cluster_eta;

	//Histogram declaration and booking function for elec_0_cluster_eta_be2
	virtual void Book_elec_0_cluster_eta_be2(int bins, double min, double max);
	TH1F	*h_elec_0_cluster_eta_be2;

	//Histogram declaration and booking function for elec_0_id_bad
	virtual void Book_elec_0_id_bad(int bins, double min, double max);
	TH1F	*h_elec_0_id_bad;

	//Histogram declaration and booking function for elec_0_id_loose
	virtual void Book_elec_0_id_loose(int bins, double min, double max);
	TH1F	*h_elec_0_id_loose;

	//Histogram declaration and booking function for elec_0_id_medium
	virtual void Book_elec_0_id_medium(int bins, double min, double max);
	TH1F	*h_elec_0_id_medium;

	//Histogram declaration and booking function for elec_0_id_tight
	virtual void Book_elec_0_id_tight(int bins, double min, double max);
	TH1F	*h_elec_0_id_tight;

	//Histogram declaration and booking function for elec_0_id_veryloose
	virtual void Book_elec_0_id_veryloose(int bins, double min, double max);
	TH1F	*h_elec_0_id_veryloose;

	//Histogram declaration and booking function for elec_0_iso_FixedCutHighPtCaloOnly
	virtual void Book_elec_0_iso_FixedCutHighPtCaloOnly(int bins, double min, double max);
	TH1F	*h_elec_0_iso_FixedCutHighPtCaloOnly;

	//Histogram declaration and booking function for elec_0_iso_FixedCutHighPtTrackOnly
	virtual void Book_elec_0_iso_FixedCutHighPtTrackOnly(int bins, double min, double max);
	TH1F	*h_elec_0_iso_FixedCutHighPtTrackOnly;

	//Histogram declaration and booking function for elec_0_iso_FixedCutLoose
	virtual void Book_elec_0_iso_FixedCutLoose(int bins, double min, double max);
	TH1F	*h_elec_0_iso_FixedCutLoose;

	//Histogram declaration and booking function for elec_0_iso_FixedCutTight
	virtual void Book_elec_0_iso_FixedCutTight(int bins, double min, double max);
	TH1F	*h_elec_0_iso_FixedCutTight;

	//Histogram declaration and booking function for elec_0_iso_FixedCutTightTrackOnly
	virtual void Book_elec_0_iso_FixedCutTightTrackOnly(int bins, double min, double max);
	TH1F	*h_elec_0_iso_FixedCutTightTrackOnly;

	//Histogram declaration and booking function for elec_0_iso_FixedCutTrackCone40
	virtual void Book_elec_0_iso_FixedCutTrackCone40(int bins, double min, double max);
	TH1F	*h_elec_0_iso_FixedCutTrackCone40;

	//Histogram declaration and booking function for elec_0_iso_Gradient
	virtual void Book_elec_0_iso_Gradient(int bins, double min, double max);
	TH1F	*h_elec_0_iso_Gradient;

	//Histogram declaration and booking function for elec_0_iso_GradientLoose
	virtual void Book_elec_0_iso_GradientLoose(int bins, double min, double max);
	TH1F	*h_elec_0_iso_GradientLoose;

	//Histogram declaration and booking function for elec_0_iso_Loose
	virtual void Book_elec_0_iso_Loose(int bins, double min, double max);
	TH1F	*h_elec_0_iso_Loose;

	//Histogram declaration and booking function for elec_0_iso_LooseTrackOnly
	virtual void Book_elec_0_iso_LooseTrackOnly(int bins, double min, double max);
	TH1F	*h_elec_0_iso_LooseTrackOnly;

	//Histogram declaration and booking function for elec_0_iso_etcone20
	virtual void Book_elec_0_iso_etcone20(int bins, double min, double max);
	TH1F	*h_elec_0_iso_etcone20;

	//Histogram declaration and booking function for elec_0_iso_etcone30
	virtual void Book_elec_0_iso_etcone30(int bins, double min, double max);
	TH1F	*h_elec_0_iso_etcone30;

	//Histogram declaration and booking function for elec_0_iso_etcone40
	virtual void Book_elec_0_iso_etcone40(int bins, double min, double max);
	TH1F	*h_elec_0_iso_etcone40;

	//Histogram declaration and booking function for elec_0_iso_ptcone20
	virtual void Book_elec_0_iso_ptcone20(int bins, double min, double max);
	TH1F	*h_elec_0_iso_ptcone20;

	//Histogram declaration and booking function for elec_0_iso_ptcone30
	virtual void Book_elec_0_iso_ptcone30(int bins, double min, double max);
	TH1F	*h_elec_0_iso_ptcone30;

	//Histogram declaration and booking function for elec_0_iso_ptcone40
	virtual void Book_elec_0_iso_ptcone40(int bins, double min, double max);
	TH1F	*h_elec_0_iso_ptcone40;

	//Histogram declaration and booking function for elec_0_iso_ptvarcone20
	virtual void Book_elec_0_iso_ptvarcone20(int bins, double min, double max);
	TH1F	*h_elec_0_iso_ptvarcone20;

	//Histogram declaration and booking function for elec_0_iso_ptvarcone30
	virtual void Book_elec_0_iso_ptvarcone30(int bins, double min, double max);
	TH1F	*h_elec_0_iso_ptvarcone30;

	//Histogram declaration and booking function for elec_0_iso_ptvarcone40
	virtual void Book_elec_0_iso_ptvarcone40(int bins, double min, double max);
	TH1F	*h_elec_0_iso_ptvarcone40;

	//Histogram declaration and booking function for elec_0_iso_topoetcone20
	virtual void Book_elec_0_iso_topoetcone20(int bins, double min, double max);
	TH1F	*h_elec_0_iso_topoetcone20;

	//Histogram declaration and booking function for elec_0_iso_topoetcone30
	virtual void Book_elec_0_iso_topoetcone30(int bins, double min, double max);
	TH1F	*h_elec_0_iso_topoetcone30;

	//Histogram declaration and booking function for elec_0_iso_topoetcone40
	virtual void Book_elec_0_iso_topoetcone40(int bins, double min, double max);
	TH1F	*h_elec_0_iso_topoetcone40;

	//Histogram declaration and booking function for elec_0_matched
	virtual void Book_elec_0_matched(int bins, double min, double max);
	TH1F	*h_elec_0_matched;

	//Histogram declaration and booking function for elec_0_matched_mother_pdgId
	virtual void Book_elec_0_matched_mother_pdgId(int bins, double min, double max);
	TH1F	*h_elec_0_matched_mother_pdgId;

	//Histogram declaration and booking function for elec_0_matched_mother_status
	virtual void Book_elec_0_matched_mother_status(int bins, double min, double max);
	TH1F	*h_elec_0_matched_mother_status;

	//Histogram declaration and booking function for elec_0_matched_origin
	virtual void Book_elec_0_matched_origin(int bins, double min, double max);
	TH1F	*h_elec_0_matched_origin;

	//Histogram declaration and booking function for elec_0_matched_pdgId
	virtual void Book_elec_0_matched_pdgId(int bins, double min, double max);
	TH1F	*h_elec_0_matched_pdgId;

	//Histogram declaration and booking function for elec_0_matched_q
	virtual void Book_elec_0_matched_q(int bins, double min, double max);
	TH1F	*h_elec_0_matched_q;

	//Histogram declaration and booking function for elec_0_matched_status
	virtual void Book_elec_0_matched_status(int bins, double min, double max);
	TH1F	*h_elec_0_matched_status;

	//Histogram declaration and booking function for elec_0_matched_truth_lepTau
	virtual void Book_elec_0_matched_truth_lepTau(int bins, double min, double max);
	TH1F	*h_elec_0_matched_truth_lepTau;

	//Histogram declaration and booking function for elec_0_matched_truth_lepTau_mother_pdgId
	virtual void Book_elec_0_matched_truth_lepTau_mother_pdgId(int bins, double min, double max);
	TH1F	*h_elec_0_matched_truth_lepTau_mother_pdgId;

	//Histogram declaration and booking function for elec_0_matched_truth_lepTau_mother_status
	virtual void Book_elec_0_matched_truth_lepTau_mother_status(int bins, double min, double max);
	TH1F	*h_elec_0_matched_truth_lepTau_mother_status;

	//Histogram declaration and booking function for elec_0_matched_truth_lepTau_origin
	virtual void Book_elec_0_matched_truth_lepTau_origin(int bins, double min, double max);
	TH1F	*h_elec_0_matched_truth_lepTau_origin;

	//Histogram declaration and booking function for elec_0_matched_truth_lepTau_pdgId
	virtual void Book_elec_0_matched_truth_lepTau_pdgId(int bins, double min, double max);
	TH1F	*h_elec_0_matched_truth_lepTau_pdgId;

	//Histogram declaration and booking function for elec_0_matched_truth_lepTau_q
	virtual void Book_elec_0_matched_truth_lepTau_q(int bins, double min, double max);
	TH1F	*h_elec_0_matched_truth_lepTau_q;

	//Histogram declaration and booking function for elec_0_matched_truth_lepTau_status
	virtual void Book_elec_0_matched_truth_lepTau_status(int bins, double min, double max);
	TH1F	*h_elec_0_matched_truth_lepTau_status;

	//Histogram declaration and booking function for elec_0_matched_truth_lepTau_type
	virtual void Book_elec_0_matched_truth_lepTau_type(int bins, double min, double max);
	TH1F	*h_elec_0_matched_truth_lepTau_type;

	//Histogram declaration and booking function for elec_0_matched_type
	virtual void Book_elec_0_matched_type(int bins, double min, double max);
	TH1F	*h_elec_0_matched_type;

	//Histogram declaration and booking function for elec_0_muonAuthor
	virtual void Book_elec_0_muonAuthor(int bins, double min, double max);
	TH1F	*h_elec_0_muonAuthor;

	//Histogram declaration and booking function for elec_0_muonType
	virtual void Book_elec_0_muonType(int bins, double min, double max);
	TH1F	*h_elec_0_muonType;

	//Histogram declaration and booking function for elec_0_origin
	virtual void Book_elec_0_origin(int bins, double min, double max);
	TH1F	*h_elec_0_origin;

	//Histogram declaration and booking function for elec_0_q
	virtual void Book_elec_0_q(int bins, double min, double max);
	TH1F	*h_elec_0_q;

	//Histogram declaration and booking function for elec_0_trk_d0
	virtual void Book_elec_0_trk_d0(int bins, double min, double max);
	TH1F	*h_elec_0_trk_d0;

	//Histogram declaration and booking function for elec_0_trk_d0_sig
	virtual void Book_elec_0_trk_d0_sig(int bins, double min, double max);
	TH1F	*h_elec_0_trk_d0_sig;

	//Histogram declaration and booking function for elec_0_trk_pt_error
	virtual void Book_elec_0_trk_pt_error(int bins, double min, double max);
	TH1F	*h_elec_0_trk_pt_error;

	//Histogram declaration and booking function for elec_0_trk_pvx_z0
	virtual void Book_elec_0_trk_pvx_z0(int bins, double min, double max);
	TH1F	*h_elec_0_trk_pvx_z0;

	//Histogram declaration and booking function for elec_0_trk_pvx_z0_sig
	virtual void Book_elec_0_trk_pvx_z0_sig(int bins, double min, double max);
	TH1F	*h_elec_0_trk_pvx_z0_sig;

	//Histogram declaration and booking function for elec_0_trk_pvx_z0_sintheta
	virtual void Book_elec_0_trk_pvx_z0_sintheta(int bins, double min, double max);
	TH1F	*h_elec_0_trk_pvx_z0_sintheta;

	//Histogram declaration and booking function for elec_0_trk_vx
	virtual void Book_elec_0_trk_vx(int bins, double min, double max);
	TH1F	*h_elec_0_trk_vx;

	//Histogram declaration and booking function for elec_0_trk_z0
	virtual void Book_elec_0_trk_z0(int bins, double min, double max);
	TH1F	*h_elec_0_trk_z0;

	//Histogram declaration and booking function for elec_0_trk_z0_sig
	virtual void Book_elec_0_trk_z0_sig(int bins, double min, double max);
	TH1F	*h_elec_0_trk_z0_sig;

	//Histogram declaration and booking function for elec_0_trk_z0_sintheta
	virtual void Book_elec_0_trk_z0_sintheta(int bins, double min, double max);
	TH1F	*h_elec_0_trk_z0_sintheta;

	//Histogram declaration and booking function for elec_0_type
	virtual void Book_elec_0_type(int bins, double min, double max);
	TH1F	*h_elec_0_type;

	//Histogram declaration and booking function for elec_1
	virtual void Book_elec_1(int bins, double min, double max);
	TH1F	*h_elec_1;

	//Histogram declaration and booking function for elec_1_NOMINAL_EleEffSF_Isolation_MediumLLH_d0z0_v13_isolGradient
	virtual void Book_elec_1_NOMINAL_EleEffSF_Isolation_MediumLLH_d0z0_v13_isolGradient(int bins, double min, double max);
	TH1F	*h_elec_1_NOMINAL_EleEffSF_Isolation_MediumLLH_d0z0_v13_isolGradient;

	//Histogram declaration and booking function for elec_1_NOMINAL_EleEffSF_SINGLE_E_2015_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_2016_2017_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0_MediumLLH_d0z0_v13_isolFixedCutTight
	virtual void Book_elec_1_NOMINAL_EleEffSF_SINGLE_E_2015_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_2016_2017_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0_MediumLLH_d0z0_v13_isolFixedCutTight(int bins, double min, double max);
	TH1F	*h_elec_1_NOMINAL_EleEffSF_SINGLE_E_2015_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_2016_2017_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0_MediumLLH_d0z0_v13_isolFixedCutTight;

	//Histogram declaration and booking function for elec_1_NOMINAL_EleEffSF_SINGLE_E_2015_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_2016_2017_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0_MediumLLH_d0z0_v13_isolGradientLoose
	virtual void Book_elec_1_NOMINAL_EleEffSF_SINGLE_E_2015_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_2016_2017_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0_MediumLLH_d0z0_v13_isolGradientLoose(int bins, double min, double max);
	TH1F	*h_elec_1_NOMINAL_EleEffSF_SINGLE_E_2015_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_2016_2017_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0_MediumLLH_d0z0_v13_isolGradientLoose;

	//Histogram declaration and booking function for elec_1_NOMINAL_EleEffSF_offline_MediumLLH_d0z0_v13
	virtual void Book_elec_1_NOMINAL_EleEffSF_offline_MediumLLH_d0z0_v13(int bins, double min, double max);
	TH1F	*h_elec_1_NOMINAL_EleEffSF_offline_MediumLLH_d0z0_v13;

	//Histogram declaration and booking function for elec_1_NOMINAL_EleEffSF_offline_RecoTrk
	virtual void Book_elec_1_NOMINAL_EleEffSF_offline_RecoTrk(int bins, double min, double max);
	TH1F	*h_elec_1_NOMINAL_EleEffSF_offline_RecoTrk;

	//Histogram declaration and booking function for elec_1_PLI_score
	virtual void Book_elec_1_PLI_score(int bins, double min, double max);
	TH1F	*h_elec_1_PLI_score;

	//Histogram declaration and booking function for elec_1_PLV_score
	virtual void Book_elec_1_PLV_score(int bins, double min, double max);
	TH1F	*h_elec_1_PLV_score;

	//Histogram declaration and booking function for elec_1_cluster_eta
	virtual void Book_elec_1_cluster_eta(int bins, double min, double max);
	TH1F	*h_elec_1_cluster_eta;

	//Histogram declaration and booking function for elec_1_cluster_eta_be2
	virtual void Book_elec_1_cluster_eta_be2(int bins, double min, double max);
	TH1F	*h_elec_1_cluster_eta_be2;

	//Histogram declaration and booking function for elec_1_id_bad
	virtual void Book_elec_1_id_bad(int bins, double min, double max);
	TH1F	*h_elec_1_id_bad;

	//Histogram declaration and booking function for elec_1_id_loose
	virtual void Book_elec_1_id_loose(int bins, double min, double max);
	TH1F	*h_elec_1_id_loose;

	//Histogram declaration and booking function for elec_1_id_medium
	virtual void Book_elec_1_id_medium(int bins, double min, double max);
	TH1F	*h_elec_1_id_medium;

	//Histogram declaration and booking function for elec_1_id_tight
	virtual void Book_elec_1_id_tight(int bins, double min, double max);
	TH1F	*h_elec_1_id_tight;

	//Histogram declaration and booking function for elec_1_id_veryloose
	virtual void Book_elec_1_id_veryloose(int bins, double min, double max);
	TH1F	*h_elec_1_id_veryloose;

	//Histogram declaration and booking function for elec_1_iso_FixedCutHighPtCaloOnly
	virtual void Book_elec_1_iso_FixedCutHighPtCaloOnly(int bins, double min, double max);
	TH1F	*h_elec_1_iso_FixedCutHighPtCaloOnly;

	//Histogram declaration and booking function for elec_1_iso_FixedCutHighPtTrackOnly
	virtual void Book_elec_1_iso_FixedCutHighPtTrackOnly(int bins, double min, double max);
	TH1F	*h_elec_1_iso_FixedCutHighPtTrackOnly;

	//Histogram declaration and booking function for elec_1_iso_FixedCutLoose
	virtual void Book_elec_1_iso_FixedCutLoose(int bins, double min, double max);
	TH1F	*h_elec_1_iso_FixedCutLoose;

	//Histogram declaration and booking function for elec_1_iso_FixedCutTight
	virtual void Book_elec_1_iso_FixedCutTight(int bins, double min, double max);
	TH1F	*h_elec_1_iso_FixedCutTight;

	//Histogram declaration and booking function for elec_1_iso_FixedCutTightTrackOnly
	virtual void Book_elec_1_iso_FixedCutTightTrackOnly(int bins, double min, double max);
	TH1F	*h_elec_1_iso_FixedCutTightTrackOnly;

	//Histogram declaration and booking function for elec_1_iso_FixedCutTrackCone40
	virtual void Book_elec_1_iso_FixedCutTrackCone40(int bins, double min, double max);
	TH1F	*h_elec_1_iso_FixedCutTrackCone40;

	//Histogram declaration and booking function for elec_1_iso_Gradient
	virtual void Book_elec_1_iso_Gradient(int bins, double min, double max);
	TH1F	*h_elec_1_iso_Gradient;

	//Histogram declaration and booking function for elec_1_iso_GradientLoose
	virtual void Book_elec_1_iso_GradientLoose(int bins, double min, double max);
	TH1F	*h_elec_1_iso_GradientLoose;

	//Histogram declaration and booking function for elec_1_iso_Loose
	virtual void Book_elec_1_iso_Loose(int bins, double min, double max);
	TH1F	*h_elec_1_iso_Loose;

	//Histogram declaration and booking function for elec_1_iso_LooseTrackOnly
	virtual void Book_elec_1_iso_LooseTrackOnly(int bins, double min, double max);
	TH1F	*h_elec_1_iso_LooseTrackOnly;

	//Histogram declaration and booking function for elec_1_iso_etcone20
	virtual void Book_elec_1_iso_etcone20(int bins, double min, double max);
	TH1F	*h_elec_1_iso_etcone20;

	//Histogram declaration and booking function for elec_1_iso_etcone30
	virtual void Book_elec_1_iso_etcone30(int bins, double min, double max);
	TH1F	*h_elec_1_iso_etcone30;

	//Histogram declaration and booking function for elec_1_iso_etcone40
	virtual void Book_elec_1_iso_etcone40(int bins, double min, double max);
	TH1F	*h_elec_1_iso_etcone40;

	//Histogram declaration and booking function for elec_1_iso_ptcone20
	virtual void Book_elec_1_iso_ptcone20(int bins, double min, double max);
	TH1F	*h_elec_1_iso_ptcone20;

	//Histogram declaration and booking function for elec_1_iso_ptcone30
	virtual void Book_elec_1_iso_ptcone30(int bins, double min, double max);
	TH1F	*h_elec_1_iso_ptcone30;

	//Histogram declaration and booking function for elec_1_iso_ptcone40
	virtual void Book_elec_1_iso_ptcone40(int bins, double min, double max);
	TH1F	*h_elec_1_iso_ptcone40;

	//Histogram declaration and booking function for elec_1_iso_ptvarcone20
	virtual void Book_elec_1_iso_ptvarcone20(int bins, double min, double max);
	TH1F	*h_elec_1_iso_ptvarcone20;

	//Histogram declaration and booking function for elec_1_iso_ptvarcone30
	virtual void Book_elec_1_iso_ptvarcone30(int bins, double min, double max);
	TH1F	*h_elec_1_iso_ptvarcone30;

	//Histogram declaration and booking function for elec_1_iso_ptvarcone40
	virtual void Book_elec_1_iso_ptvarcone40(int bins, double min, double max);
	TH1F	*h_elec_1_iso_ptvarcone40;

	//Histogram declaration and booking function for elec_1_iso_topoetcone20
	virtual void Book_elec_1_iso_topoetcone20(int bins, double min, double max);
	TH1F	*h_elec_1_iso_topoetcone20;

	//Histogram declaration and booking function for elec_1_iso_topoetcone30
	virtual void Book_elec_1_iso_topoetcone30(int bins, double min, double max);
	TH1F	*h_elec_1_iso_topoetcone30;

	//Histogram declaration and booking function for elec_1_iso_topoetcone40
	virtual void Book_elec_1_iso_topoetcone40(int bins, double min, double max);
	TH1F	*h_elec_1_iso_topoetcone40;

	//Histogram declaration and booking function for elec_1_matched
	virtual void Book_elec_1_matched(int bins, double min, double max);
	TH1F	*h_elec_1_matched;

	//Histogram declaration and booking function for elec_1_matched_mother_pdgId
	virtual void Book_elec_1_matched_mother_pdgId(int bins, double min, double max);
	TH1F	*h_elec_1_matched_mother_pdgId;

	//Histogram declaration and booking function for elec_1_matched_mother_status
	virtual void Book_elec_1_matched_mother_status(int bins, double min, double max);
	TH1F	*h_elec_1_matched_mother_status;

	//Histogram declaration and booking function for elec_1_matched_origin
	virtual void Book_elec_1_matched_origin(int bins, double min, double max);
	TH1F	*h_elec_1_matched_origin;

	//Histogram declaration and booking function for elec_1_matched_pdgId
	virtual void Book_elec_1_matched_pdgId(int bins, double min, double max);
	TH1F	*h_elec_1_matched_pdgId;

	//Histogram declaration and booking function for elec_1_matched_q
	virtual void Book_elec_1_matched_q(int bins, double min, double max);
	TH1F	*h_elec_1_matched_q;

	//Histogram declaration and booking function for elec_1_matched_status
	virtual void Book_elec_1_matched_status(int bins, double min, double max);
	TH1F	*h_elec_1_matched_status;

	//Histogram declaration and booking function for elec_1_matched_truth_lepTau
	virtual void Book_elec_1_matched_truth_lepTau(int bins, double min, double max);
	TH1F	*h_elec_1_matched_truth_lepTau;

	//Histogram declaration and booking function for elec_1_matched_truth_lepTau_mother_pdgId
	virtual void Book_elec_1_matched_truth_lepTau_mother_pdgId(int bins, double min, double max);
	TH1F	*h_elec_1_matched_truth_lepTau_mother_pdgId;

	//Histogram declaration and booking function for elec_1_matched_truth_lepTau_mother_status
	virtual void Book_elec_1_matched_truth_lepTau_mother_status(int bins, double min, double max);
	TH1F	*h_elec_1_matched_truth_lepTau_mother_status;

	//Histogram declaration and booking function for elec_1_matched_truth_lepTau_origin
	virtual void Book_elec_1_matched_truth_lepTau_origin(int bins, double min, double max);
	TH1F	*h_elec_1_matched_truth_lepTau_origin;

	//Histogram declaration and booking function for elec_1_matched_truth_lepTau_pdgId
	virtual void Book_elec_1_matched_truth_lepTau_pdgId(int bins, double min, double max);
	TH1F	*h_elec_1_matched_truth_lepTau_pdgId;

	//Histogram declaration and booking function for elec_1_matched_truth_lepTau_q
	virtual void Book_elec_1_matched_truth_lepTau_q(int bins, double min, double max);
	TH1F	*h_elec_1_matched_truth_lepTau_q;

	//Histogram declaration and booking function for elec_1_matched_truth_lepTau_status
	virtual void Book_elec_1_matched_truth_lepTau_status(int bins, double min, double max);
	TH1F	*h_elec_1_matched_truth_lepTau_status;

	//Histogram declaration and booking function for elec_1_matched_truth_lepTau_type
	virtual void Book_elec_1_matched_truth_lepTau_type(int bins, double min, double max);
	TH1F	*h_elec_1_matched_truth_lepTau_type;

	//Histogram declaration and booking function for elec_1_matched_type
	virtual void Book_elec_1_matched_type(int bins, double min, double max);
	TH1F	*h_elec_1_matched_type;

	//Histogram declaration and booking function for elec_1_muonAuthor
	virtual void Book_elec_1_muonAuthor(int bins, double min, double max);
	TH1F	*h_elec_1_muonAuthor;

	//Histogram declaration and booking function for elec_1_muonType
	virtual void Book_elec_1_muonType(int bins, double min, double max);
	TH1F	*h_elec_1_muonType;

	//Histogram declaration and booking function for elec_1_origin
	virtual void Book_elec_1_origin(int bins, double min, double max);
	TH1F	*h_elec_1_origin;

	//Histogram declaration and booking function for elec_1_q
	virtual void Book_elec_1_q(int bins, double min, double max);
	TH1F	*h_elec_1_q;

	//Histogram declaration and booking function for elec_1_trk_d0
	virtual void Book_elec_1_trk_d0(int bins, double min, double max);
	TH1F	*h_elec_1_trk_d0;

	//Histogram declaration and booking function for elec_1_trk_d0_sig
	virtual void Book_elec_1_trk_d0_sig(int bins, double min, double max);
	TH1F	*h_elec_1_trk_d0_sig;

	//Histogram declaration and booking function for elec_1_trk_pt_error
	virtual void Book_elec_1_trk_pt_error(int bins, double min, double max);
	TH1F	*h_elec_1_trk_pt_error;

	//Histogram declaration and booking function for elec_1_trk_pvx_z0
	virtual void Book_elec_1_trk_pvx_z0(int bins, double min, double max);
	TH1F	*h_elec_1_trk_pvx_z0;

	//Histogram declaration and booking function for elec_1_trk_pvx_z0_sig
	virtual void Book_elec_1_trk_pvx_z0_sig(int bins, double min, double max);
	TH1F	*h_elec_1_trk_pvx_z0_sig;

	//Histogram declaration and booking function for elec_1_trk_pvx_z0_sintheta
	virtual void Book_elec_1_trk_pvx_z0_sintheta(int bins, double min, double max);
	TH1F	*h_elec_1_trk_pvx_z0_sintheta;

	//Histogram declaration and booking function for elec_1_trk_vx
	virtual void Book_elec_1_trk_vx(int bins, double min, double max);
	TH1F	*h_elec_1_trk_vx;

	//Histogram declaration and booking function for elec_1_trk_z0
	virtual void Book_elec_1_trk_z0(int bins, double min, double max);
	TH1F	*h_elec_1_trk_z0;

	//Histogram declaration and booking function for elec_1_trk_z0_sig
	virtual void Book_elec_1_trk_z0_sig(int bins, double min, double max);
	TH1F	*h_elec_1_trk_z0_sig;

	//Histogram declaration and booking function for elec_1_trk_z0_sintheta
	virtual void Book_elec_1_trk_z0_sintheta(int bins, double min, double max);
	TH1F	*h_elec_1_trk_z0_sintheta;

	//Histogram declaration and booking function for elec_1_type
	virtual void Book_elec_1_type(int bins, double min, double max);
	TH1F	*h_elec_1_type;

	//Histogram declaration and booking function for event_clean_detector_core
	virtual void Book_event_clean_detector_core(int bins, double min, double max);
	TH1F	*h_event_clean_detector_core;

	//Histogram declaration and booking function for event_number
	virtual void Book_event_number(int bins, double min, double max);
	TH1F	*h_event_number;

	//Histogram declaration and booking function for jet_NOMINAL_central_jets_global_effSF_JVT
	virtual void Book_jet_NOMINAL_central_jets_global_effSF_JVT(int bins, double min, double max);
	TH1F	*h_jet_NOMINAL_central_jets_global_effSF_JVT;

	//Histogram declaration and booking function for jet_NOMINAL_central_jets_global_ineffSF_JVT
	virtual void Book_jet_NOMINAL_central_jets_global_ineffSF_JVT(int bins, double min, double max);
	TH1F	*h_jet_NOMINAL_central_jets_global_ineffSF_JVT;

	//Histogram declaration and booking function for jet_NOMINAL_forward_jets_global_effSF_JVT
	virtual void Book_jet_NOMINAL_forward_jets_global_effSF_JVT(int bins, double min, double max);
	TH1F	*h_jet_NOMINAL_forward_jets_global_effSF_JVT;

	//Histogram declaration and booking function for jet_NOMINAL_forward_jets_global_ineffSF_JVT
	virtual void Book_jet_NOMINAL_forward_jets_global_ineffSF_JVT(int bins, double min, double max);
	TH1F	*h_jet_NOMINAL_forward_jets_global_ineffSF_JVT;

	//Histogram declaration and booking function for jet_NOMINAL_global_effSF_MV2c10
	virtual void Book_jet_NOMINAL_global_effSF_MV2c10(int bins, double min, double max);
	TH1F	*h_jet_NOMINAL_global_effSF_MV2c10;

	//Histogram declaration and booking function for jet_NOMINAL_global_ineffSF_MV2c10
	virtual void Book_jet_NOMINAL_global_ineffSF_MV2c10(int bins, double min, double max);
	TH1F	*h_jet_NOMINAL_global_ineffSF_MV2c10;

	//Histogram declaration and booking function for ljet_0
	virtual void Book_ljet_0(int bins, double min, double max);
	TH1F	*h_ljet_0;

	//Histogram declaration and booking function for ljet_0_NOMINAL_central_jets_effSF_JVT
	virtual void Book_ljet_0_NOMINAL_central_jets_effSF_JVT(int bins, double min, double max);
	TH1F	*h_ljet_0_NOMINAL_central_jets_effSF_JVT;

	//Histogram declaration and booking function for ljet_0_NOMINAL_central_jets_ineffSF_JVT
	virtual void Book_ljet_0_NOMINAL_central_jets_ineffSF_JVT(int bins, double min, double max);
	TH1F	*h_ljet_0_NOMINAL_central_jets_ineffSF_JVT;

	//Histogram declaration and booking function for ljet_0_NOMINAL_effSF_MV2c10
	virtual void Book_ljet_0_NOMINAL_effSF_MV2c10(int bins, double min, double max);
	TH1F	*h_ljet_0_NOMINAL_effSF_MV2c10;

	//Histogram declaration and booking function for ljet_0_NOMINAL_forward_jets_effSF_JVT
	virtual void Book_ljet_0_NOMINAL_forward_jets_effSF_JVT(int bins, double min, double max);
	TH1F	*h_ljet_0_NOMINAL_forward_jets_effSF_JVT;

	//Histogram declaration and booking function for ljet_0_NOMINAL_forward_jets_ineffSF_JVT
	virtual void Book_ljet_0_NOMINAL_forward_jets_ineffSF_JVT(int bins, double min, double max);
	TH1F	*h_ljet_0_NOMINAL_forward_jets_ineffSF_JVT;

	//Histogram declaration and booking function for ljet_0_NOMINAL_ineffSF_MV2c10
	virtual void Book_ljet_0_NOMINAL_ineffSF_MV2c10(int bins, double min, double max);
	TH1F	*h_ljet_0_NOMINAL_ineffSF_MV2c10;

	//Histogram declaration and booking function for ljet_0_b_tag_quantile
	virtual void Book_ljet_0_b_tag_quantile(int bins, double min, double max);
	TH1F	*h_ljet_0_b_tag_quantile;

	//Histogram declaration and booking function for ljet_0_b_tag_score
	virtual void Book_ljet_0_b_tag_score(int bins, double min, double max);
	TH1F	*h_ljet_0_b_tag_score;

	//Histogram declaration and booking function for ljet_0_b_tagged
	virtual void Book_ljet_0_b_tagged(int bins, double min, double max);
	TH1F	*h_ljet_0_b_tagged;

	//Histogram declaration and booking function for ljet_0_fjvt
	virtual void Book_ljet_0_fjvt(int bins, double min, double max);
	TH1F	*h_ljet_0_fjvt;

	//Histogram declaration and booking function for ljet_0_flavorlabel
	virtual void Book_ljet_0_flavorlabel(int bins, double min, double max);
	TH1F	*h_ljet_0_flavorlabel;

	//Histogram declaration and booking function for ljet_0_flavorlabel_cone
	virtual void Book_ljet_0_flavorlabel_cone(int bins, double min, double max);
	TH1F	*h_ljet_0_flavorlabel_cone;

	//Histogram declaration and booking function for ljet_0_flavorlabel_part
	virtual void Book_ljet_0_flavorlabel_part(int bins, double min, double max);
	TH1F	*h_ljet_0_flavorlabel_part;

	//Histogram declaration and booking function for ljet_0_is_Jvt_HS
	virtual void Book_ljet_0_is_Jvt_HS(int bins, double min, double max);
	TH1F	*h_ljet_0_is_Jvt_HS;

	//Histogram declaration and booking function for ljet_0_jvt
	virtual void Book_ljet_0_jvt(int bins, double min, double max);
	TH1F	*h_ljet_0_jvt;

	//Histogram declaration and booking function for ljet_0_matched
	virtual void Book_ljet_0_matched(int bins, double min, double max);
	TH1F	*h_ljet_0_matched;

	//Histogram declaration and booking function for ljet_0_matched_mother_pdgId
	virtual void Book_ljet_0_matched_mother_pdgId(int bins, double min, double max);
	TH1F	*h_ljet_0_matched_mother_pdgId;

	//Histogram declaration and booking function for ljet_0_matched_mother_status
	virtual void Book_ljet_0_matched_mother_status(int bins, double min, double max);
	TH1F	*h_ljet_0_matched_mother_status;

	//Histogram declaration and booking function for ljet_0_matched_origin
	virtual void Book_ljet_0_matched_origin(int bins, double min, double max);
	TH1F	*h_ljet_0_matched_origin;

	//Histogram declaration and booking function for ljet_0_matched_pdgId
	virtual void Book_ljet_0_matched_pdgId(int bins, double min, double max);
	TH1F	*h_ljet_0_matched_pdgId;

	//Histogram declaration and booking function for ljet_0_matched_q
	virtual void Book_ljet_0_matched_q(int bins, double min, double max);
	TH1F	*h_ljet_0_matched_q;

	//Histogram declaration and booking function for ljet_0_matched_status
	virtual void Book_ljet_0_matched_status(int bins, double min, double max);
	TH1F	*h_ljet_0_matched_status;

	//Histogram declaration and booking function for ljet_0_matched_type
	virtual void Book_ljet_0_matched_type(int bins, double min, double max);
	TH1F	*h_ljet_0_matched_type;

	//Histogram declaration and booking function for ljet_0_origin
	virtual void Book_ljet_0_origin(int bins, double min, double max);
	TH1F	*h_ljet_0_origin;

	//Histogram declaration and booking function for ljet_0_q
	virtual void Book_ljet_0_q(int bins, double min, double max);
	TH1F	*h_ljet_0_q;

	//Histogram declaration and booking function for ljet_0_type
	virtual void Book_ljet_0_type(int bins, double min, double max);
	TH1F	*h_ljet_0_type;

	//Histogram declaration and booking function for ljet_0_width
	virtual void Book_ljet_0_width(int bins, double min, double max);
	TH1F	*h_ljet_0_width;

	//Histogram declaration and booking function for ljet_1
	virtual void Book_ljet_1(int bins, double min, double max);
	TH1F	*h_ljet_1;

	//Histogram declaration and booking function for ljet_1_NOMINAL_central_jets_effSF_JVT
	virtual void Book_ljet_1_NOMINAL_central_jets_effSF_JVT(int bins, double min, double max);
	TH1F	*h_ljet_1_NOMINAL_central_jets_effSF_JVT;

	//Histogram declaration and booking function for ljet_1_NOMINAL_central_jets_ineffSF_JVT
	virtual void Book_ljet_1_NOMINAL_central_jets_ineffSF_JVT(int bins, double min, double max);
	TH1F	*h_ljet_1_NOMINAL_central_jets_ineffSF_JVT;

	//Histogram declaration and booking function for ljet_1_NOMINAL_effSF_MV2c10
	virtual void Book_ljet_1_NOMINAL_effSF_MV2c10(int bins, double min, double max);
	TH1F	*h_ljet_1_NOMINAL_effSF_MV2c10;

	//Histogram declaration and booking function for ljet_1_NOMINAL_forward_jets_effSF_JVT
	virtual void Book_ljet_1_NOMINAL_forward_jets_effSF_JVT(int bins, double min, double max);
	TH1F	*h_ljet_1_NOMINAL_forward_jets_effSF_JVT;

	//Histogram declaration and booking function for ljet_1_NOMINAL_forward_jets_ineffSF_JVT
	virtual void Book_ljet_1_NOMINAL_forward_jets_ineffSF_JVT(int bins, double min, double max);
	TH1F	*h_ljet_1_NOMINAL_forward_jets_ineffSF_JVT;

	//Histogram declaration and booking function for ljet_1_NOMINAL_ineffSF_MV2c10
	virtual void Book_ljet_1_NOMINAL_ineffSF_MV2c10(int bins, double min, double max);
	TH1F	*h_ljet_1_NOMINAL_ineffSF_MV2c10;

	//Histogram declaration and booking function for ljet_1_b_tag_quantile
	virtual void Book_ljet_1_b_tag_quantile(int bins, double min, double max);
	TH1F	*h_ljet_1_b_tag_quantile;

	//Histogram declaration and booking function for ljet_1_b_tag_score
	virtual void Book_ljet_1_b_tag_score(int bins, double min, double max);
	TH1F	*h_ljet_1_b_tag_score;

	//Histogram declaration and booking function for ljet_1_b_tagged
	virtual void Book_ljet_1_b_tagged(int bins, double min, double max);
	TH1F	*h_ljet_1_b_tagged;

	//Histogram declaration and booking function for ljet_1_fjvt
	virtual void Book_ljet_1_fjvt(int bins, double min, double max);
	TH1F	*h_ljet_1_fjvt;

	//Histogram declaration and booking function for ljet_1_flavorlabel
	virtual void Book_ljet_1_flavorlabel(int bins, double min, double max);
	TH1F	*h_ljet_1_flavorlabel;

	//Histogram declaration and booking function for ljet_1_flavorlabel_cone
	virtual void Book_ljet_1_flavorlabel_cone(int bins, double min, double max);
	TH1F	*h_ljet_1_flavorlabel_cone;

	//Histogram declaration and booking function for ljet_1_flavorlabel_part
	virtual void Book_ljet_1_flavorlabel_part(int bins, double min, double max);
	TH1F	*h_ljet_1_flavorlabel_part;

	//Histogram declaration and booking function for ljet_1_is_Jvt_HS
	virtual void Book_ljet_1_is_Jvt_HS(int bins, double min, double max);
	TH1F	*h_ljet_1_is_Jvt_HS;

	//Histogram declaration and booking function for ljet_1_jvt
	virtual void Book_ljet_1_jvt(int bins, double min, double max);
	TH1F	*h_ljet_1_jvt;

	//Histogram declaration and booking function for ljet_1_matched
	virtual void Book_ljet_1_matched(int bins, double min, double max);
	TH1F	*h_ljet_1_matched;

	//Histogram declaration and booking function for ljet_1_matched_mother_pdgId
	virtual void Book_ljet_1_matched_mother_pdgId(int bins, double min, double max);
	TH1F	*h_ljet_1_matched_mother_pdgId;

	//Histogram declaration and booking function for ljet_1_matched_mother_status
	virtual void Book_ljet_1_matched_mother_status(int bins, double min, double max);
	TH1F	*h_ljet_1_matched_mother_status;

	//Histogram declaration and booking function for ljet_1_matched_origin
	virtual void Book_ljet_1_matched_origin(int bins, double min, double max);
	TH1F	*h_ljet_1_matched_origin;

	//Histogram declaration and booking function for ljet_1_matched_pdgId
	virtual void Book_ljet_1_matched_pdgId(int bins, double min, double max);
	TH1F	*h_ljet_1_matched_pdgId;

	//Histogram declaration and booking function for ljet_1_matched_q
	virtual void Book_ljet_1_matched_q(int bins, double min, double max);
	TH1F	*h_ljet_1_matched_q;

	//Histogram declaration and booking function for ljet_1_matched_status
	virtual void Book_ljet_1_matched_status(int bins, double min, double max);
	TH1F	*h_ljet_1_matched_status;

	//Histogram declaration and booking function for ljet_1_matched_type
	virtual void Book_ljet_1_matched_type(int bins, double min, double max);
	TH1F	*h_ljet_1_matched_type;

	//Histogram declaration and booking function for ljet_1_origin
	virtual void Book_ljet_1_origin(int bins, double min, double max);
	TH1F	*h_ljet_1_origin;

	//Histogram declaration and booking function for ljet_1_q
	virtual void Book_ljet_1_q(int bins, double min, double max);
	TH1F	*h_ljet_1_q;

	//Histogram declaration and booking function for ljet_1_type
	virtual void Book_ljet_1_type(int bins, double min, double max);
	TH1F	*h_ljet_1_type;

	//Histogram declaration and booking function for ljet_1_width
	virtual void Book_ljet_1_width(int bins, double min, double max);
	TH1F	*h_ljet_1_width;

	//Histogram declaration and booking function for ljet_2
	virtual void Book_ljet_2(int bins, double min, double max);
	TH1F	*h_ljet_2;

	//Histogram declaration and booking function for ljet_2_NOMINAL_central_jets_effSF_JVT
	virtual void Book_ljet_2_NOMINAL_central_jets_effSF_JVT(int bins, double min, double max);
	TH1F	*h_ljet_2_NOMINAL_central_jets_effSF_JVT;

	//Histogram declaration and booking function for ljet_2_NOMINAL_central_jets_ineffSF_JVT
	virtual void Book_ljet_2_NOMINAL_central_jets_ineffSF_JVT(int bins, double min, double max);
	TH1F	*h_ljet_2_NOMINAL_central_jets_ineffSF_JVT;

	//Histogram declaration and booking function for ljet_2_NOMINAL_effSF_MV2c10
	virtual void Book_ljet_2_NOMINAL_effSF_MV2c10(int bins, double min, double max);
	TH1F	*h_ljet_2_NOMINAL_effSF_MV2c10;

	//Histogram declaration and booking function for ljet_2_NOMINAL_forward_jets_effSF_JVT
	virtual void Book_ljet_2_NOMINAL_forward_jets_effSF_JVT(int bins, double min, double max);
	TH1F	*h_ljet_2_NOMINAL_forward_jets_effSF_JVT;

	//Histogram declaration and booking function for ljet_2_NOMINAL_forward_jets_ineffSF_JVT
	virtual void Book_ljet_2_NOMINAL_forward_jets_ineffSF_JVT(int bins, double min, double max);
	TH1F	*h_ljet_2_NOMINAL_forward_jets_ineffSF_JVT;

	//Histogram declaration and booking function for ljet_2_NOMINAL_ineffSF_MV2c10
	virtual void Book_ljet_2_NOMINAL_ineffSF_MV2c10(int bins, double min, double max);
	TH1F	*h_ljet_2_NOMINAL_ineffSF_MV2c10;

	//Histogram declaration and booking function for ljet_2_b_tag_quantile
	virtual void Book_ljet_2_b_tag_quantile(int bins, double min, double max);
	TH1F	*h_ljet_2_b_tag_quantile;

	//Histogram declaration and booking function for ljet_2_b_tag_score
	virtual void Book_ljet_2_b_tag_score(int bins, double min, double max);
	TH1F	*h_ljet_2_b_tag_score;

	//Histogram declaration and booking function for ljet_2_b_tagged
	virtual void Book_ljet_2_b_tagged(int bins, double min, double max);
	TH1F	*h_ljet_2_b_tagged;

	//Histogram declaration and booking function for ljet_2_fjvt
	virtual void Book_ljet_2_fjvt(int bins, double min, double max);
	TH1F	*h_ljet_2_fjvt;

	//Histogram declaration and booking function for ljet_2_flavorlabel
	virtual void Book_ljet_2_flavorlabel(int bins, double min, double max);
	TH1F	*h_ljet_2_flavorlabel;

	//Histogram declaration and booking function for ljet_2_flavorlabel_cone
	virtual void Book_ljet_2_flavorlabel_cone(int bins, double min, double max);
	TH1F	*h_ljet_2_flavorlabel_cone;

	//Histogram declaration and booking function for ljet_2_flavorlabel_part
	virtual void Book_ljet_2_flavorlabel_part(int bins, double min, double max);
	TH1F	*h_ljet_2_flavorlabel_part;

	//Histogram declaration and booking function for ljet_2_is_Jvt_HS
	virtual void Book_ljet_2_is_Jvt_HS(int bins, double min, double max);
	TH1F	*h_ljet_2_is_Jvt_HS;

	//Histogram declaration and booking function for ljet_2_jvt
	virtual void Book_ljet_2_jvt(int bins, double min, double max);
	TH1F	*h_ljet_2_jvt;

	//Histogram declaration and booking function for ljet_2_matched
	virtual void Book_ljet_2_matched(int bins, double min, double max);
	TH1F	*h_ljet_2_matched;

	//Histogram declaration and booking function for ljet_2_matched_mother_pdgId
	virtual void Book_ljet_2_matched_mother_pdgId(int bins, double min, double max);
	TH1F	*h_ljet_2_matched_mother_pdgId;

	//Histogram declaration and booking function for ljet_2_matched_mother_status
	virtual void Book_ljet_2_matched_mother_status(int bins, double min, double max);
	TH1F	*h_ljet_2_matched_mother_status;

	//Histogram declaration and booking function for ljet_2_matched_origin
	virtual void Book_ljet_2_matched_origin(int bins, double min, double max);
	TH1F	*h_ljet_2_matched_origin;

	//Histogram declaration and booking function for ljet_2_matched_pdgId
	virtual void Book_ljet_2_matched_pdgId(int bins, double min, double max);
	TH1F	*h_ljet_2_matched_pdgId;

	//Histogram declaration and booking function for ljet_2_matched_q
	virtual void Book_ljet_2_matched_q(int bins, double min, double max);
	TH1F	*h_ljet_2_matched_q;

	//Histogram declaration and booking function for ljet_2_matched_status
	virtual void Book_ljet_2_matched_status(int bins, double min, double max);
	TH1F	*h_ljet_2_matched_status;

	//Histogram declaration and booking function for ljet_2_matched_type
	virtual void Book_ljet_2_matched_type(int bins, double min, double max);
	TH1F	*h_ljet_2_matched_type;

	//Histogram declaration and booking function for ljet_2_origin
	virtual void Book_ljet_2_origin(int bins, double min, double max);
	TH1F	*h_ljet_2_origin;

	//Histogram declaration and booking function for ljet_2_q
	virtual void Book_ljet_2_q(int bins, double min, double max);
	TH1F	*h_ljet_2_q;

	//Histogram declaration and booking function for ljet_2_type
	virtual void Book_ljet_2_type(int bins, double min, double max);
	TH1F	*h_ljet_2_type;

	//Histogram declaration and booking function for ljet_2_width
	virtual void Book_ljet_2_width(int bins, double min, double max);
	TH1F	*h_ljet_2_width;

	//Histogram declaration and booking function for ljet_3
	virtual void Book_ljet_3(int bins, double min, double max);
	TH1F	*h_ljet_3;

	//Histogram declaration and booking function for ljet_3_NOMINAL_central_jets_effSF_JVT
	virtual void Book_ljet_3_NOMINAL_central_jets_effSF_JVT(int bins, double min, double max);
	TH1F	*h_ljet_3_NOMINAL_central_jets_effSF_JVT;

	//Histogram declaration and booking function for ljet_3_NOMINAL_central_jets_ineffSF_JVT
	virtual void Book_ljet_3_NOMINAL_central_jets_ineffSF_JVT(int bins, double min, double max);
	TH1F	*h_ljet_3_NOMINAL_central_jets_ineffSF_JVT;

	//Histogram declaration and booking function for ljet_3_NOMINAL_effSF_MV2c10
	virtual void Book_ljet_3_NOMINAL_effSF_MV2c10(int bins, double min, double max);
	TH1F	*h_ljet_3_NOMINAL_effSF_MV2c10;

	//Histogram declaration and booking function for ljet_3_NOMINAL_forward_jets_effSF_JVT
	virtual void Book_ljet_3_NOMINAL_forward_jets_effSF_JVT(int bins, double min, double max);
	TH1F	*h_ljet_3_NOMINAL_forward_jets_effSF_JVT;

	//Histogram declaration and booking function for ljet_3_NOMINAL_forward_jets_ineffSF_JVT
	virtual void Book_ljet_3_NOMINAL_forward_jets_ineffSF_JVT(int bins, double min, double max);
	TH1F	*h_ljet_3_NOMINAL_forward_jets_ineffSF_JVT;

	//Histogram declaration and booking function for ljet_3_NOMINAL_ineffSF_MV2c10
	virtual void Book_ljet_3_NOMINAL_ineffSF_MV2c10(int bins, double min, double max);
	TH1F	*h_ljet_3_NOMINAL_ineffSF_MV2c10;

	//Histogram declaration and booking function for ljet_3_b_tag_quantile
	virtual void Book_ljet_3_b_tag_quantile(int bins, double min, double max);
	TH1F	*h_ljet_3_b_tag_quantile;

	//Histogram declaration and booking function for ljet_3_b_tag_score
	virtual void Book_ljet_3_b_tag_score(int bins, double min, double max);
	TH1F	*h_ljet_3_b_tag_score;

	//Histogram declaration and booking function for ljet_3_b_tagged
	virtual void Book_ljet_3_b_tagged(int bins, double min, double max);
	TH1F	*h_ljet_3_b_tagged;

	//Histogram declaration and booking function for ljet_3_fjvt
	virtual void Book_ljet_3_fjvt(int bins, double min, double max);
	TH1F	*h_ljet_3_fjvt;

	//Histogram declaration and booking function for ljet_3_flavorlabel
	virtual void Book_ljet_3_flavorlabel(int bins, double min, double max);
	TH1F	*h_ljet_3_flavorlabel;

	//Histogram declaration and booking function for ljet_3_flavorlabel_cone
	virtual void Book_ljet_3_flavorlabel_cone(int bins, double min, double max);
	TH1F	*h_ljet_3_flavorlabel_cone;

	//Histogram declaration and booking function for ljet_3_flavorlabel_part
	virtual void Book_ljet_3_flavorlabel_part(int bins, double min, double max);
	TH1F	*h_ljet_3_flavorlabel_part;

	//Histogram declaration and booking function for ljet_3_is_Jvt_HS
	virtual void Book_ljet_3_is_Jvt_HS(int bins, double min, double max);
	TH1F	*h_ljet_3_is_Jvt_HS;

	//Histogram declaration and booking function for ljet_3_jvt
	virtual void Book_ljet_3_jvt(int bins, double min, double max);
	TH1F	*h_ljet_3_jvt;

	//Histogram declaration and booking function for ljet_3_matched
	virtual void Book_ljet_3_matched(int bins, double min, double max);
	TH1F	*h_ljet_3_matched;

	//Histogram declaration and booking function for ljet_3_matched_mother_pdgId
	virtual void Book_ljet_3_matched_mother_pdgId(int bins, double min, double max);
	TH1F	*h_ljet_3_matched_mother_pdgId;

	//Histogram declaration and booking function for ljet_3_matched_mother_status
	virtual void Book_ljet_3_matched_mother_status(int bins, double min, double max);
	TH1F	*h_ljet_3_matched_mother_status;

	//Histogram declaration and booking function for ljet_3_matched_origin
	virtual void Book_ljet_3_matched_origin(int bins, double min, double max);
	TH1F	*h_ljet_3_matched_origin;

	//Histogram declaration and booking function for ljet_3_matched_pdgId
	virtual void Book_ljet_3_matched_pdgId(int bins, double min, double max);
	TH1F	*h_ljet_3_matched_pdgId;

	//Histogram declaration and booking function for ljet_3_matched_q
	virtual void Book_ljet_3_matched_q(int bins, double min, double max);
	TH1F	*h_ljet_3_matched_q;

	//Histogram declaration and booking function for ljet_3_matched_status
	virtual void Book_ljet_3_matched_status(int bins, double min, double max);
	TH1F	*h_ljet_3_matched_status;

	//Histogram declaration and booking function for ljet_3_matched_type
	virtual void Book_ljet_3_matched_type(int bins, double min, double max);
	TH1F	*h_ljet_3_matched_type;

	//Histogram declaration and booking function for ljet_3_origin
	virtual void Book_ljet_3_origin(int bins, double min, double max);
	TH1F	*h_ljet_3_origin;

	//Histogram declaration and booking function for ljet_3_q
	virtual void Book_ljet_3_q(int bins, double min, double max);
	TH1F	*h_ljet_3_q;

	//Histogram declaration and booking function for ljet_3_type
	virtual void Book_ljet_3_type(int bins, double min, double max);
	TH1F	*h_ljet_3_type;

	//Histogram declaration and booking function for ljet_3_width
	virtual void Book_ljet_3_width(int bins, double min, double max);
	TH1F	*h_ljet_3_width;

	//Histogram declaration and booking function for mc_channel_number
	virtual void Book_mc_channel_number(int bins, double min, double max);
	TH1F	*h_mc_channel_number;

	//Histogram declaration and booking function for met_more_met_et_ele
	virtual void Book_met_more_met_et_ele(int bins, double min, double max);
	TH1F	*h_met_more_met_et_ele;

	//Histogram declaration and booking function for met_more_met_et_jet
	virtual void Book_met_more_met_et_jet(int bins, double min, double max);
	TH1F	*h_met_more_met_et_jet;

	//Histogram declaration and booking function for met_more_met_et_muon
	virtual void Book_met_more_met_et_muon(int bins, double min, double max);
	TH1F	*h_met_more_met_et_muon;

	//Histogram declaration and booking function for met_more_met_et_pho
	virtual void Book_met_more_met_et_pho(int bins, double min, double max);
	TH1F	*h_met_more_met_et_pho;

	//Histogram declaration and booking function for met_more_met_et_soft
	virtual void Book_met_more_met_et_soft(int bins, double min, double max);
	TH1F	*h_met_more_met_et_soft;

	//Histogram declaration and booking function for met_more_met_et_tau
	virtual void Book_met_more_met_et_tau(int bins, double min, double max);
	TH1F	*h_met_more_met_et_tau;

	//Histogram declaration and booking function for met_more_met_phi_ele
	virtual void Book_met_more_met_phi_ele(int bins, double min, double max);
	TH1F	*h_met_more_met_phi_ele;

	//Histogram declaration and booking function for met_more_met_phi_jet
	virtual void Book_met_more_met_phi_jet(int bins, double min, double max);
	TH1F	*h_met_more_met_phi_jet;

	//Histogram declaration and booking function for met_more_met_phi_muon
	virtual void Book_met_more_met_phi_muon(int bins, double min, double max);
	TH1F	*h_met_more_met_phi_muon;

	//Histogram declaration and booking function for met_more_met_phi_pho
	virtual void Book_met_more_met_phi_pho(int bins, double min, double max);
	TH1F	*h_met_more_met_phi_pho;

	//Histogram declaration and booking function for met_more_met_phi_soft
	virtual void Book_met_more_met_phi_soft(int bins, double min, double max);
	TH1F	*h_met_more_met_phi_soft;

	//Histogram declaration and booking function for met_more_met_phi_tau
	virtual void Book_met_more_met_phi_tau(int bins, double min, double max);
	TH1F	*h_met_more_met_phi_tau;

	//Histogram declaration and booking function for met_more_met_sumet_ele
	virtual void Book_met_more_met_sumet_ele(int bins, double min, double max);
	TH1F	*h_met_more_met_sumet_ele;

	//Histogram declaration and booking function for met_more_met_sumet_jet
	virtual void Book_met_more_met_sumet_jet(int bins, double min, double max);
	TH1F	*h_met_more_met_sumet_jet;

	//Histogram declaration and booking function for met_more_met_sumet_muon
	virtual void Book_met_more_met_sumet_muon(int bins, double min, double max);
	TH1F	*h_met_more_met_sumet_muon;

	//Histogram declaration and booking function for met_more_met_sumet_pho
	virtual void Book_met_more_met_sumet_pho(int bins, double min, double max);
	TH1F	*h_met_more_met_sumet_pho;

	//Histogram declaration and booking function for met_more_met_sumet_soft
	virtual void Book_met_more_met_sumet_soft(int bins, double min, double max);
	TH1F	*h_met_more_met_sumet_soft;

	//Histogram declaration and booking function for met_more_met_sumet_tau
	virtual void Book_met_more_met_sumet_tau(int bins, double min, double max);
	TH1F	*h_met_more_met_sumet_tau;

	//Histogram declaration and booking function for met_reco_sig
	virtual void Book_met_reco_sig(int bins, double min, double max);
	TH1F	*h_met_reco_sig;

	//Histogram declaration and booking function for met_reco_sig_tracks
	virtual void Book_met_reco_sig_tracks(int bins, double min, double max);
	TH1F	*h_met_reco_sig_tracks;

	//Histogram declaration and booking function for met_reco_sumet
	virtual void Book_met_reco_sumet(int bins, double min, double max);
	TH1F	*h_met_reco_sumet;

	//Histogram declaration and booking function for met_truth_sig
	virtual void Book_met_truth_sig(int bins, double min, double max);
	TH1F	*h_met_truth_sig;

	//Histogram declaration and booking function for met_truth_sig_tracks
	virtual void Book_met_truth_sig_tracks(int bins, double min, double max);
	TH1F	*h_met_truth_sig_tracks;

	//Histogram declaration and booking function for met_truth_sumet
	virtual void Book_met_truth_sumet(int bins, double min, double max);
	TH1F	*h_met_truth_sumet;

	//Histogram declaration and booking function for muTrigMatch_0_HLT_mu20_iloose_L1MU15
	virtual void Book_muTrigMatch_0_HLT_mu20_iloose_L1MU15(int bins, double min, double max);
	TH1F	*h_muTrigMatch_0_HLT_mu20_iloose_L1MU15;

	//Histogram declaration and booking function for muTrigMatch_0_HLT_mu24_imedium
	virtual void Book_muTrigMatch_0_HLT_mu24_imedium(int bins, double min, double max);
	TH1F	*h_muTrigMatch_0_HLT_mu24_imedium;

	//Histogram declaration and booking function for muTrigMatch_0_HLT_mu24_ivarmedium
	virtual void Book_muTrigMatch_0_HLT_mu24_ivarmedium(int bins, double min, double max);
	TH1F	*h_muTrigMatch_0_HLT_mu24_ivarmedium;

	//Histogram declaration and booking function for muTrigMatch_0_HLT_mu26_imedium
	virtual void Book_muTrigMatch_0_HLT_mu26_imedium(int bins, double min, double max);
	TH1F	*h_muTrigMatch_0_HLT_mu26_imedium;

	//Histogram declaration and booking function for muTrigMatch_0_HLT_mu26_ivarmedium
	virtual void Book_muTrigMatch_0_HLT_mu26_ivarmedium(int bins, double min, double max);
	TH1F	*h_muTrigMatch_0_HLT_mu26_ivarmedium;

	//Histogram declaration and booking function for muTrigMatch_0_HLT_mu40
	virtual void Book_muTrigMatch_0_HLT_mu40(int bins, double min, double max);
	TH1F	*h_muTrigMatch_0_HLT_mu40;

	//Histogram declaration and booking function for muTrigMatch_0_HLT_mu50
	virtual void Book_muTrigMatch_0_HLT_mu50(int bins, double min, double max);
	TH1F	*h_muTrigMatch_0_HLT_mu50;

	//Histogram declaration and booking function for muTrigMatch_0_trigger_matched
	virtual void Book_muTrigMatch_0_trigger_matched(int bins, double min, double max);
	TH1F	*h_muTrigMatch_0_trigger_matched;

	//Histogram declaration and booking function for muTrigMatch_1_HLT_mu20_iloose_L1MU15
	virtual void Book_muTrigMatch_1_HLT_mu20_iloose_L1MU15(int bins, double min, double max);
	TH1F	*h_muTrigMatch_1_HLT_mu20_iloose_L1MU15;

	//Histogram declaration and booking function for muTrigMatch_1_HLT_mu24_imedium
	virtual void Book_muTrigMatch_1_HLT_mu24_imedium(int bins, double min, double max);
	TH1F	*h_muTrigMatch_1_HLT_mu24_imedium;

	//Histogram declaration and booking function for muTrigMatch_1_HLT_mu24_ivarmedium
	virtual void Book_muTrigMatch_1_HLT_mu24_ivarmedium(int bins, double min, double max);
	TH1F	*h_muTrigMatch_1_HLT_mu24_ivarmedium;

	//Histogram declaration and booking function for muTrigMatch_1_HLT_mu26_imedium
	virtual void Book_muTrigMatch_1_HLT_mu26_imedium(int bins, double min, double max);
	TH1F	*h_muTrigMatch_1_HLT_mu26_imedium;

	//Histogram declaration and booking function for muTrigMatch_1_HLT_mu26_ivarmedium
	virtual void Book_muTrigMatch_1_HLT_mu26_ivarmedium(int bins, double min, double max);
	TH1F	*h_muTrigMatch_1_HLT_mu26_ivarmedium;

	//Histogram declaration and booking function for muTrigMatch_1_HLT_mu40
	virtual void Book_muTrigMatch_1_HLT_mu40(int bins, double min, double max);
	TH1F	*h_muTrigMatch_1_HLT_mu40;

	//Histogram declaration and booking function for muTrigMatch_1_HLT_mu50
	virtual void Book_muTrigMatch_1_HLT_mu50(int bins, double min, double max);
	TH1F	*h_muTrigMatch_1_HLT_mu50;

	//Histogram declaration and booking function for muTrigMatch_1_trigger_matched
	virtual void Book_muTrigMatch_1_trigger_matched(int bins, double min, double max);
	TH1F	*h_muTrigMatch_1_trigger_matched;

	//Histogram declaration and booking function for muon_0
	virtual void Book_muon_0(int bins, double min, double max);
	TH1F	*h_muon_0;

	//Histogram declaration and booking function for muon_0_NOMINAL_MuEffSF_HLT_mu20_iloose_L1MU15_OR_HLT_mu40_QualMedium_IsoNone
	virtual void Book_muon_0_NOMINAL_MuEffSF_HLT_mu20_iloose_L1MU15_OR_HLT_mu40_QualMedium_IsoNone(int bins, double min, double max);
	TH1F	*h_muon_0_NOMINAL_MuEffSF_HLT_mu20_iloose_L1MU15_OR_HLT_mu40_QualMedium_IsoNone;

	//Histogram declaration and booking function for muon_0_NOMINAL_MuEffSF_HLT_mu20_iloose_L1MU15_OR_HLT_mu50_QualMedium_IsoNone
	virtual void Book_muon_0_NOMINAL_MuEffSF_HLT_mu20_iloose_L1MU15_OR_HLT_mu50_QualMedium_IsoNone(int bins, double min, double max);
	TH1F	*h_muon_0_NOMINAL_MuEffSF_HLT_mu20_iloose_L1MU15_OR_HLT_mu50_QualMedium_IsoNone;

	//Histogram declaration and booking function for muon_0_NOMINAL_MuEffSF_HLT_mu24_imedium_OR_HLT_mu40_QualMedium_IsoNone
	virtual void Book_muon_0_NOMINAL_MuEffSF_HLT_mu24_imedium_OR_HLT_mu40_QualMedium_IsoNone(int bins, double min, double max);
	TH1F	*h_muon_0_NOMINAL_MuEffSF_HLT_mu24_imedium_OR_HLT_mu40_QualMedium_IsoNone;

	//Histogram declaration and booking function for muon_0_NOMINAL_MuEffSF_HLT_mu24_imedium_OR_HLT_mu50_QualMedium_IsoNone
	virtual void Book_muon_0_NOMINAL_MuEffSF_HLT_mu24_imedium_OR_HLT_mu50_QualMedium_IsoNone(int bins, double min, double max);
	TH1F	*h_muon_0_NOMINAL_MuEffSF_HLT_mu24_imedium_OR_HLT_mu50_QualMedium_IsoNone;

	//Histogram declaration and booking function for muon_0_NOMINAL_MuEffSF_HLT_mu26_ivarmedium_OR_HLT_mu50_QualMedium_IsoNone
	virtual void Book_muon_0_NOMINAL_MuEffSF_HLT_mu26_ivarmedium_OR_HLT_mu50_QualMedium_IsoNone(int bins, double min, double max);
	TH1F	*h_muon_0_NOMINAL_MuEffSF_HLT_mu26_ivarmedium_OR_HLT_mu50_QualMedium_IsoNone;

	//Histogram declaration and booking function for muon_0_NOMINAL_MuEffSF_HLT_mu26_ivarmedium_QualMedium_IsoNone
	virtual void Book_muon_0_NOMINAL_MuEffSF_HLT_mu26_ivarmedium_QualMedium_IsoNone(int bins, double min, double max);
	TH1F	*h_muon_0_NOMINAL_MuEffSF_HLT_mu26_ivarmedium_QualMedium_IsoNone;

	//Histogram declaration and booking function for muon_0_NOMINAL_MuEffSF_HLT_mu50_QualMedium_IsoNone
	virtual void Book_muon_0_NOMINAL_MuEffSF_HLT_mu50_QualMedium_IsoNone(int bins, double min, double max);
	TH1F	*h_muon_0_NOMINAL_MuEffSF_HLT_mu50_QualMedium_IsoNone;

	//Histogram declaration and booking function for muon_0_NOMINAL_MuEffSF_IsoGradient
	virtual void Book_muon_0_NOMINAL_MuEffSF_IsoGradient(int bins, double min, double max);
	TH1F	*h_muon_0_NOMINAL_MuEffSF_IsoGradient;

	//Histogram declaration and booking function for muon_0_NOMINAL_MuEffSF_IsoLoose
	virtual void Book_muon_0_NOMINAL_MuEffSF_IsoLoose(int bins, double min, double max);
	TH1F	*h_muon_0_NOMINAL_MuEffSF_IsoLoose;

	//Histogram declaration and booking function for muon_0_NOMINAL_MuEffSF_Reco_QualMedium
	virtual void Book_muon_0_NOMINAL_MuEffSF_Reco_QualMedium(int bins, double min, double max);
	TH1F	*h_muon_0_NOMINAL_MuEffSF_Reco_QualMedium;

	//Histogram declaration and booking function for muon_0_NOMINAL_MuEffSF_TTVA
	virtual void Book_muon_0_NOMINAL_MuEffSF_TTVA(int bins, double min, double max);
	TH1F	*h_muon_0_NOMINAL_MuEffSF_TTVA;

	//Histogram declaration and booking function for muon_0_PLI_score
	virtual void Book_muon_0_PLI_score(int bins, double min, double max);
	TH1F	*h_muon_0_PLI_score;

	//Histogram declaration and booking function for muon_0_PLV_score
	virtual void Book_muon_0_PLV_score(int bins, double min, double max);
	TH1F	*h_muon_0_PLV_score;

	//Histogram declaration and booking function for muon_0_cluster_eta
	virtual void Book_muon_0_cluster_eta(int bins, double min, double max);
	TH1F	*h_muon_0_cluster_eta;

	//Histogram declaration and booking function for muon_0_cluster_eta_be2
	virtual void Book_muon_0_cluster_eta_be2(int bins, double min, double max);
	TH1F	*h_muon_0_cluster_eta_be2;

	//Histogram declaration and booking function for muon_0_id_bad
	virtual void Book_muon_0_id_bad(int bins, double min, double max);
	TH1F	*h_muon_0_id_bad;

	//Histogram declaration and booking function for muon_0_id_loose
	virtual void Book_muon_0_id_loose(int bins, double min, double max);
	TH1F	*h_muon_0_id_loose;

	//Histogram declaration and booking function for muon_0_id_medium
	virtual void Book_muon_0_id_medium(int bins, double min, double max);
	TH1F	*h_muon_0_id_medium;

	//Histogram declaration and booking function for muon_0_id_tight
	virtual void Book_muon_0_id_tight(int bins, double min, double max);
	TH1F	*h_muon_0_id_tight;

	//Histogram declaration and booking function for muon_0_id_veryloose
	virtual void Book_muon_0_id_veryloose(int bins, double min, double max);
	TH1F	*h_muon_0_id_veryloose;

	//Histogram declaration and booking function for muon_0_iso_FixedCutHighPtCaloOnly
	virtual void Book_muon_0_iso_FixedCutHighPtCaloOnly(int bins, double min, double max);
	TH1F	*h_muon_0_iso_FixedCutHighPtCaloOnly;

	//Histogram declaration and booking function for muon_0_iso_FixedCutHighPtTrackOnly
	virtual void Book_muon_0_iso_FixedCutHighPtTrackOnly(int bins, double min, double max);
	TH1F	*h_muon_0_iso_FixedCutHighPtTrackOnly;

	//Histogram declaration and booking function for muon_0_iso_FixedCutLoose
	virtual void Book_muon_0_iso_FixedCutLoose(int bins, double min, double max);
	TH1F	*h_muon_0_iso_FixedCutLoose;

	//Histogram declaration and booking function for muon_0_iso_FixedCutTight
	virtual void Book_muon_0_iso_FixedCutTight(int bins, double min, double max);
	TH1F	*h_muon_0_iso_FixedCutTight;

	//Histogram declaration and booking function for muon_0_iso_FixedCutTightTrackOnly
	virtual void Book_muon_0_iso_FixedCutTightTrackOnly(int bins, double min, double max);
	TH1F	*h_muon_0_iso_FixedCutTightTrackOnly;

	//Histogram declaration and booking function for muon_0_iso_FixedCutTrackCone40
	virtual void Book_muon_0_iso_FixedCutTrackCone40(int bins, double min, double max);
	TH1F	*h_muon_0_iso_FixedCutTrackCone40;

	//Histogram declaration and booking function for muon_0_iso_Gradient
	virtual void Book_muon_0_iso_Gradient(int bins, double min, double max);
	TH1F	*h_muon_0_iso_Gradient;

	//Histogram declaration and booking function for muon_0_iso_GradientLoose
	virtual void Book_muon_0_iso_GradientLoose(int bins, double min, double max);
	TH1F	*h_muon_0_iso_GradientLoose;

	//Histogram declaration and booking function for muon_0_iso_Loose
	virtual void Book_muon_0_iso_Loose(int bins, double min, double max);
	TH1F	*h_muon_0_iso_Loose;

	//Histogram declaration and booking function for muon_0_iso_LooseTrackOnly
	virtual void Book_muon_0_iso_LooseTrackOnly(int bins, double min, double max);
	TH1F	*h_muon_0_iso_LooseTrackOnly;

	//Histogram declaration and booking function for muon_0_iso_etcone20
	virtual void Book_muon_0_iso_etcone20(int bins, double min, double max);
	TH1F	*h_muon_0_iso_etcone20;

	//Histogram declaration and booking function for muon_0_iso_etcone30
	virtual void Book_muon_0_iso_etcone30(int bins, double min, double max);
	TH1F	*h_muon_0_iso_etcone30;

	//Histogram declaration and booking function for muon_0_iso_etcone40
	virtual void Book_muon_0_iso_etcone40(int bins, double min, double max);
	TH1F	*h_muon_0_iso_etcone40;

	//Histogram declaration and booking function for muon_0_iso_ptcone20
	virtual void Book_muon_0_iso_ptcone20(int bins, double min, double max);
	TH1F	*h_muon_0_iso_ptcone20;

	//Histogram declaration and booking function for muon_0_iso_ptcone30
	virtual void Book_muon_0_iso_ptcone30(int bins, double min, double max);
	TH1F	*h_muon_0_iso_ptcone30;

	//Histogram declaration and booking function for muon_0_iso_ptcone40
	virtual void Book_muon_0_iso_ptcone40(int bins, double min, double max);
	TH1F	*h_muon_0_iso_ptcone40;

	//Histogram declaration and booking function for muon_0_iso_ptvarcone20
	virtual void Book_muon_0_iso_ptvarcone20(int bins, double min, double max);
	TH1F	*h_muon_0_iso_ptvarcone20;

	//Histogram declaration and booking function for muon_0_iso_ptvarcone30
	virtual void Book_muon_0_iso_ptvarcone30(int bins, double min, double max);
	TH1F	*h_muon_0_iso_ptvarcone30;

	//Histogram declaration and booking function for muon_0_iso_ptvarcone40
	virtual void Book_muon_0_iso_ptvarcone40(int bins, double min, double max);
	TH1F	*h_muon_0_iso_ptvarcone40;

	//Histogram declaration and booking function for muon_0_iso_topoetcone20
	virtual void Book_muon_0_iso_topoetcone20(int bins, double min, double max);
	TH1F	*h_muon_0_iso_topoetcone20;

	//Histogram declaration and booking function for muon_0_iso_topoetcone30
	virtual void Book_muon_0_iso_topoetcone30(int bins, double min, double max);
	TH1F	*h_muon_0_iso_topoetcone30;

	//Histogram declaration and booking function for muon_0_iso_topoetcone40
	virtual void Book_muon_0_iso_topoetcone40(int bins, double min, double max);
	TH1F	*h_muon_0_iso_topoetcone40;

	//Histogram declaration and booking function for muon_0_matched
	virtual void Book_muon_0_matched(int bins, double min, double max);
	TH1F	*h_muon_0_matched;

	//Histogram declaration and booking function for muon_0_matched_mother_pdgId
	virtual void Book_muon_0_matched_mother_pdgId(int bins, double min, double max);
	TH1F	*h_muon_0_matched_mother_pdgId;

	//Histogram declaration and booking function for muon_0_matched_mother_status
	virtual void Book_muon_0_matched_mother_status(int bins, double min, double max);
	TH1F	*h_muon_0_matched_mother_status;

	//Histogram declaration and booking function for muon_0_matched_origin
	virtual void Book_muon_0_matched_origin(int bins, double min, double max);
	TH1F	*h_muon_0_matched_origin;

	//Histogram declaration and booking function for muon_0_matched_pdgId
	virtual void Book_muon_0_matched_pdgId(int bins, double min, double max);
	TH1F	*h_muon_0_matched_pdgId;

	//Histogram declaration and booking function for muon_0_matched_q
	virtual void Book_muon_0_matched_q(int bins, double min, double max);
	TH1F	*h_muon_0_matched_q;

	//Histogram declaration and booking function for muon_0_matched_status
	virtual void Book_muon_0_matched_status(int bins, double min, double max);
	TH1F	*h_muon_0_matched_status;

	//Histogram declaration and booking function for muon_0_matched_truth_lepTau
	virtual void Book_muon_0_matched_truth_lepTau(int bins, double min, double max);
	TH1F	*h_muon_0_matched_truth_lepTau;

	//Histogram declaration and booking function for muon_0_matched_truth_lepTau_mother_pdgId
	virtual void Book_muon_0_matched_truth_lepTau_mother_pdgId(int bins, double min, double max);
	TH1F	*h_muon_0_matched_truth_lepTau_mother_pdgId;

	//Histogram declaration and booking function for muon_0_matched_truth_lepTau_mother_status
	virtual void Book_muon_0_matched_truth_lepTau_mother_status(int bins, double min, double max);
	TH1F	*h_muon_0_matched_truth_lepTau_mother_status;

	//Histogram declaration and booking function for muon_0_matched_truth_lepTau_origin
	virtual void Book_muon_0_matched_truth_lepTau_origin(int bins, double min, double max);
	TH1F	*h_muon_0_matched_truth_lepTau_origin;

	//Histogram declaration and booking function for muon_0_matched_truth_lepTau_pdgId
	virtual void Book_muon_0_matched_truth_lepTau_pdgId(int bins, double min, double max);
	TH1F	*h_muon_0_matched_truth_lepTau_pdgId;

	//Histogram declaration and booking function for muon_0_matched_truth_lepTau_q
	virtual void Book_muon_0_matched_truth_lepTau_q(int bins, double min, double max);
	TH1F	*h_muon_0_matched_truth_lepTau_q;

	//Histogram declaration and booking function for muon_0_matched_truth_lepTau_status
	virtual void Book_muon_0_matched_truth_lepTau_status(int bins, double min, double max);
	TH1F	*h_muon_0_matched_truth_lepTau_status;

	//Histogram declaration and booking function for muon_0_matched_truth_lepTau_type
	virtual void Book_muon_0_matched_truth_lepTau_type(int bins, double min, double max);
	TH1F	*h_muon_0_matched_truth_lepTau_type;

	//Histogram declaration and booking function for muon_0_matched_type
	virtual void Book_muon_0_matched_type(int bins, double min, double max);
	TH1F	*h_muon_0_matched_type;

	//Histogram declaration and booking function for muon_0_muonAuthor
	virtual void Book_muon_0_muonAuthor(int bins, double min, double max);
	TH1F	*h_muon_0_muonAuthor;

	//Histogram declaration and booking function for muon_0_muonType
	virtual void Book_muon_0_muonType(int bins, double min, double max);
	TH1F	*h_muon_0_muonType;

	//Histogram declaration and booking function for muon_0_origin
	virtual void Book_muon_0_origin(int bins, double min, double max);
	TH1F	*h_muon_0_origin;

	//Histogram declaration and booking function for muon_0_q
	virtual void Book_muon_0_q(int bins, double min, double max);
	TH1F	*h_muon_0_q;

	//Histogram declaration and booking function for muon_0_trk_d0
	virtual void Book_muon_0_trk_d0(int bins, double min, double max);
	TH1F	*h_muon_0_trk_d0;

	//Histogram declaration and booking function for muon_0_trk_d0_sig
	virtual void Book_muon_0_trk_d0_sig(int bins, double min, double max);
	TH1F	*h_muon_0_trk_d0_sig;

	//Histogram declaration and booking function for muon_0_trk_pt_error
	virtual void Book_muon_0_trk_pt_error(int bins, double min, double max);
	TH1F	*h_muon_0_trk_pt_error;

	//Histogram declaration and booking function for muon_0_trk_pvx_z0
	virtual void Book_muon_0_trk_pvx_z0(int bins, double min, double max);
	TH1F	*h_muon_0_trk_pvx_z0;

	//Histogram declaration and booking function for muon_0_trk_pvx_z0_sig
	virtual void Book_muon_0_trk_pvx_z0_sig(int bins, double min, double max);
	TH1F	*h_muon_0_trk_pvx_z0_sig;

	//Histogram declaration and booking function for muon_0_trk_pvx_z0_sintheta
	virtual void Book_muon_0_trk_pvx_z0_sintheta(int bins, double min, double max);
	TH1F	*h_muon_0_trk_pvx_z0_sintheta;

	//Histogram declaration and booking function for muon_0_trk_vx
	virtual void Book_muon_0_trk_vx(int bins, double min, double max);
	TH1F	*h_muon_0_trk_vx;

	//Histogram declaration and booking function for muon_0_trk_z0
	virtual void Book_muon_0_trk_z0(int bins, double min, double max);
	TH1F	*h_muon_0_trk_z0;

	//Histogram declaration and booking function for muon_0_trk_z0_sig
	virtual void Book_muon_0_trk_z0_sig(int bins, double min, double max);
	TH1F	*h_muon_0_trk_z0_sig;

	//Histogram declaration and booking function for muon_0_trk_z0_sintheta
	virtual void Book_muon_0_trk_z0_sintheta(int bins, double min, double max);
	TH1F	*h_muon_0_trk_z0_sintheta;

	//Histogram declaration and booking function for muon_0_type
	virtual void Book_muon_0_type(int bins, double min, double max);
	TH1F	*h_muon_0_type;

	//Histogram declaration and booking function for muon_1
	virtual void Book_muon_1(int bins, double min, double max);
	TH1F	*h_muon_1;

	//Histogram declaration and booking function for muon_1_NOMINAL_MuEffSF_HLT_mu20_iloose_L1MU15_OR_HLT_mu40_QualMedium_IsoNone
	virtual void Book_muon_1_NOMINAL_MuEffSF_HLT_mu20_iloose_L1MU15_OR_HLT_mu40_QualMedium_IsoNone(int bins, double min, double max);
	TH1F	*h_muon_1_NOMINAL_MuEffSF_HLT_mu20_iloose_L1MU15_OR_HLT_mu40_QualMedium_IsoNone;

	//Histogram declaration and booking function for muon_1_NOMINAL_MuEffSF_HLT_mu20_iloose_L1MU15_OR_HLT_mu50_QualMedium_IsoNone
	virtual void Book_muon_1_NOMINAL_MuEffSF_HLT_mu20_iloose_L1MU15_OR_HLT_mu50_QualMedium_IsoNone(int bins, double min, double max);
	TH1F	*h_muon_1_NOMINAL_MuEffSF_HLT_mu20_iloose_L1MU15_OR_HLT_mu50_QualMedium_IsoNone;

	//Histogram declaration and booking function for muon_1_NOMINAL_MuEffSF_HLT_mu24_imedium_OR_HLT_mu40_QualMedium_IsoNone
	virtual void Book_muon_1_NOMINAL_MuEffSF_HLT_mu24_imedium_OR_HLT_mu40_QualMedium_IsoNone(int bins, double min, double max);
	TH1F	*h_muon_1_NOMINAL_MuEffSF_HLT_mu24_imedium_OR_HLT_mu40_QualMedium_IsoNone;

	//Histogram declaration and booking function for muon_1_NOMINAL_MuEffSF_HLT_mu24_imedium_OR_HLT_mu50_QualMedium_IsoNone
	virtual void Book_muon_1_NOMINAL_MuEffSF_HLT_mu24_imedium_OR_HLT_mu50_QualMedium_IsoNone(int bins, double min, double max);
	TH1F	*h_muon_1_NOMINAL_MuEffSF_HLT_mu24_imedium_OR_HLT_mu50_QualMedium_IsoNone;

	//Histogram declaration and booking function for muon_1_NOMINAL_MuEffSF_HLT_mu26_ivarmedium_OR_HLT_mu50_QualMedium_IsoNone
	virtual void Book_muon_1_NOMINAL_MuEffSF_HLT_mu26_ivarmedium_OR_HLT_mu50_QualMedium_IsoNone(int bins, double min, double max);
	TH1F	*h_muon_1_NOMINAL_MuEffSF_HLT_mu26_ivarmedium_OR_HLT_mu50_QualMedium_IsoNone;

	//Histogram declaration and booking function for muon_1_NOMINAL_MuEffSF_HLT_mu26_ivarmedium_QualMedium_IsoNone
	virtual void Book_muon_1_NOMINAL_MuEffSF_HLT_mu26_ivarmedium_QualMedium_IsoNone(int bins, double min, double max);
	TH1F	*h_muon_1_NOMINAL_MuEffSF_HLT_mu26_ivarmedium_QualMedium_IsoNone;

	//Histogram declaration and booking function for muon_1_NOMINAL_MuEffSF_HLT_mu50_QualMedium_IsoNone
	virtual void Book_muon_1_NOMINAL_MuEffSF_HLT_mu50_QualMedium_IsoNone(int bins, double min, double max);
	TH1F	*h_muon_1_NOMINAL_MuEffSF_HLT_mu50_QualMedium_IsoNone;

	//Histogram declaration and booking function for muon_1_NOMINAL_MuEffSF_IsoGradient
	virtual void Book_muon_1_NOMINAL_MuEffSF_IsoGradient(int bins, double min, double max);
	TH1F	*h_muon_1_NOMINAL_MuEffSF_IsoGradient;

	//Histogram declaration and booking function for muon_1_NOMINAL_MuEffSF_IsoLoose
	virtual void Book_muon_1_NOMINAL_MuEffSF_IsoLoose(int bins, double min, double max);
	TH1F	*h_muon_1_NOMINAL_MuEffSF_IsoLoose;

	//Histogram declaration and booking function for muon_1_NOMINAL_MuEffSF_Reco_QualMedium
	virtual void Book_muon_1_NOMINAL_MuEffSF_Reco_QualMedium(int bins, double min, double max);
	TH1F	*h_muon_1_NOMINAL_MuEffSF_Reco_QualMedium;

	//Histogram declaration and booking function for muon_1_NOMINAL_MuEffSF_TTVA
	virtual void Book_muon_1_NOMINAL_MuEffSF_TTVA(int bins, double min, double max);
	TH1F	*h_muon_1_NOMINAL_MuEffSF_TTVA;

	//Histogram declaration and booking function for muon_1_PLI_score
	virtual void Book_muon_1_PLI_score(int bins, double min, double max);
	TH1F	*h_muon_1_PLI_score;

	//Histogram declaration and booking function for muon_1_PLV_score
	virtual void Book_muon_1_PLV_score(int bins, double min, double max);
	TH1F	*h_muon_1_PLV_score;

	//Histogram declaration and booking function for muon_1_cluster_eta
	virtual void Book_muon_1_cluster_eta(int bins, double min, double max);
	TH1F	*h_muon_1_cluster_eta;

	//Histogram declaration and booking function for muon_1_cluster_eta_be2
	virtual void Book_muon_1_cluster_eta_be2(int bins, double min, double max);
	TH1F	*h_muon_1_cluster_eta_be2;

	//Histogram declaration and booking function for muon_1_id_bad
	virtual void Book_muon_1_id_bad(int bins, double min, double max);
	TH1F	*h_muon_1_id_bad;

	//Histogram declaration and booking function for muon_1_id_loose
	virtual void Book_muon_1_id_loose(int bins, double min, double max);
	TH1F	*h_muon_1_id_loose;

	//Histogram declaration and booking function for muon_1_id_medium
	virtual void Book_muon_1_id_medium(int bins, double min, double max);
	TH1F	*h_muon_1_id_medium;

	//Histogram declaration and booking function for muon_1_id_tight
	virtual void Book_muon_1_id_tight(int bins, double min, double max);
	TH1F	*h_muon_1_id_tight;

	//Histogram declaration and booking function for muon_1_id_veryloose
	virtual void Book_muon_1_id_veryloose(int bins, double min, double max);
	TH1F	*h_muon_1_id_veryloose;

	//Histogram declaration and booking function for muon_1_iso_FixedCutHighPtCaloOnly
	virtual void Book_muon_1_iso_FixedCutHighPtCaloOnly(int bins, double min, double max);
	TH1F	*h_muon_1_iso_FixedCutHighPtCaloOnly;

	//Histogram declaration and booking function for muon_1_iso_FixedCutHighPtTrackOnly
	virtual void Book_muon_1_iso_FixedCutHighPtTrackOnly(int bins, double min, double max);
	TH1F	*h_muon_1_iso_FixedCutHighPtTrackOnly;

	//Histogram declaration and booking function for muon_1_iso_FixedCutLoose
	virtual void Book_muon_1_iso_FixedCutLoose(int bins, double min, double max);
	TH1F	*h_muon_1_iso_FixedCutLoose;

	//Histogram declaration and booking function for muon_1_iso_FixedCutTight
	virtual void Book_muon_1_iso_FixedCutTight(int bins, double min, double max);
	TH1F	*h_muon_1_iso_FixedCutTight;

	//Histogram declaration and booking function for muon_1_iso_FixedCutTightTrackOnly
	virtual void Book_muon_1_iso_FixedCutTightTrackOnly(int bins, double min, double max);
	TH1F	*h_muon_1_iso_FixedCutTightTrackOnly;

	//Histogram declaration and booking function for muon_1_iso_FixedCutTrackCone40
	virtual void Book_muon_1_iso_FixedCutTrackCone40(int bins, double min, double max);
	TH1F	*h_muon_1_iso_FixedCutTrackCone40;

	//Histogram declaration and booking function for muon_1_iso_Gradient
	virtual void Book_muon_1_iso_Gradient(int bins, double min, double max);
	TH1F	*h_muon_1_iso_Gradient;

	//Histogram declaration and booking function for muon_1_iso_GradientLoose
	virtual void Book_muon_1_iso_GradientLoose(int bins, double min, double max);
	TH1F	*h_muon_1_iso_GradientLoose;

	//Histogram declaration and booking function for muon_1_iso_Loose
	virtual void Book_muon_1_iso_Loose(int bins, double min, double max);
	TH1F	*h_muon_1_iso_Loose;

	//Histogram declaration and booking function for muon_1_iso_LooseTrackOnly
	virtual void Book_muon_1_iso_LooseTrackOnly(int bins, double min, double max);
	TH1F	*h_muon_1_iso_LooseTrackOnly;

	//Histogram declaration and booking function for muon_1_iso_etcone20
	virtual void Book_muon_1_iso_etcone20(int bins, double min, double max);
	TH1F	*h_muon_1_iso_etcone20;

	//Histogram declaration and booking function for muon_1_iso_etcone30
	virtual void Book_muon_1_iso_etcone30(int bins, double min, double max);
	TH1F	*h_muon_1_iso_etcone30;

	//Histogram declaration and booking function for muon_1_iso_etcone40
	virtual void Book_muon_1_iso_etcone40(int bins, double min, double max);
	TH1F	*h_muon_1_iso_etcone40;

	//Histogram declaration and booking function for muon_1_iso_ptcone20
	virtual void Book_muon_1_iso_ptcone20(int bins, double min, double max);
	TH1F	*h_muon_1_iso_ptcone20;

	//Histogram declaration and booking function for muon_1_iso_ptcone30
	virtual void Book_muon_1_iso_ptcone30(int bins, double min, double max);
	TH1F	*h_muon_1_iso_ptcone30;

	//Histogram declaration and booking function for muon_1_iso_ptcone40
	virtual void Book_muon_1_iso_ptcone40(int bins, double min, double max);
	TH1F	*h_muon_1_iso_ptcone40;

	//Histogram declaration and booking function for muon_1_iso_ptvarcone20
	virtual void Book_muon_1_iso_ptvarcone20(int bins, double min, double max);
	TH1F	*h_muon_1_iso_ptvarcone20;

	//Histogram declaration and booking function for muon_1_iso_ptvarcone30
	virtual void Book_muon_1_iso_ptvarcone30(int bins, double min, double max);
	TH1F	*h_muon_1_iso_ptvarcone30;

	//Histogram declaration and booking function for muon_1_iso_ptvarcone40
	virtual void Book_muon_1_iso_ptvarcone40(int bins, double min, double max);
	TH1F	*h_muon_1_iso_ptvarcone40;

	//Histogram declaration and booking function for muon_1_iso_topoetcone20
	virtual void Book_muon_1_iso_topoetcone20(int bins, double min, double max);
	TH1F	*h_muon_1_iso_topoetcone20;

	//Histogram declaration and booking function for muon_1_iso_topoetcone30
	virtual void Book_muon_1_iso_topoetcone30(int bins, double min, double max);
	TH1F	*h_muon_1_iso_topoetcone30;

	//Histogram declaration and booking function for muon_1_iso_topoetcone40
	virtual void Book_muon_1_iso_topoetcone40(int bins, double min, double max);
	TH1F	*h_muon_1_iso_topoetcone40;

	//Histogram declaration and booking function for muon_1_matched
	virtual void Book_muon_1_matched(int bins, double min, double max);
	TH1F	*h_muon_1_matched;

	//Histogram declaration and booking function for muon_1_matched_mother_pdgId
	virtual void Book_muon_1_matched_mother_pdgId(int bins, double min, double max);
	TH1F	*h_muon_1_matched_mother_pdgId;

	//Histogram declaration and booking function for muon_1_matched_mother_status
	virtual void Book_muon_1_matched_mother_status(int bins, double min, double max);
	TH1F	*h_muon_1_matched_mother_status;

	//Histogram declaration and booking function for muon_1_matched_origin
	virtual void Book_muon_1_matched_origin(int bins, double min, double max);
	TH1F	*h_muon_1_matched_origin;

	//Histogram declaration and booking function for muon_1_matched_pdgId
	virtual void Book_muon_1_matched_pdgId(int bins, double min, double max);
	TH1F	*h_muon_1_matched_pdgId;

	//Histogram declaration and booking function for muon_1_matched_q
	virtual void Book_muon_1_matched_q(int bins, double min, double max);
	TH1F	*h_muon_1_matched_q;

	//Histogram declaration and booking function for muon_1_matched_status
	virtual void Book_muon_1_matched_status(int bins, double min, double max);
	TH1F	*h_muon_1_matched_status;

	//Histogram declaration and booking function for muon_1_matched_truth_lepTau
	virtual void Book_muon_1_matched_truth_lepTau(int bins, double min, double max);
	TH1F	*h_muon_1_matched_truth_lepTau;

	//Histogram declaration and booking function for muon_1_matched_truth_lepTau_mother_pdgId
	virtual void Book_muon_1_matched_truth_lepTau_mother_pdgId(int bins, double min, double max);
	TH1F	*h_muon_1_matched_truth_lepTau_mother_pdgId;

	//Histogram declaration and booking function for muon_1_matched_truth_lepTau_mother_status
	virtual void Book_muon_1_matched_truth_lepTau_mother_status(int bins, double min, double max);
	TH1F	*h_muon_1_matched_truth_lepTau_mother_status;

	//Histogram declaration and booking function for muon_1_matched_truth_lepTau_origin
	virtual void Book_muon_1_matched_truth_lepTau_origin(int bins, double min, double max);
	TH1F	*h_muon_1_matched_truth_lepTau_origin;

	//Histogram declaration and booking function for muon_1_matched_truth_lepTau_pdgId
	virtual void Book_muon_1_matched_truth_lepTau_pdgId(int bins, double min, double max);
	TH1F	*h_muon_1_matched_truth_lepTau_pdgId;

	//Histogram declaration and booking function for muon_1_matched_truth_lepTau_q
	virtual void Book_muon_1_matched_truth_lepTau_q(int bins, double min, double max);
	TH1F	*h_muon_1_matched_truth_lepTau_q;

	//Histogram declaration and booking function for muon_1_matched_truth_lepTau_status
	virtual void Book_muon_1_matched_truth_lepTau_status(int bins, double min, double max);
	TH1F	*h_muon_1_matched_truth_lepTau_status;

	//Histogram declaration and booking function for muon_1_matched_truth_lepTau_type
	virtual void Book_muon_1_matched_truth_lepTau_type(int bins, double min, double max);
	TH1F	*h_muon_1_matched_truth_lepTau_type;

	//Histogram declaration and booking function for muon_1_matched_type
	virtual void Book_muon_1_matched_type(int bins, double min, double max);
	TH1F	*h_muon_1_matched_type;

	//Histogram declaration and booking function for muon_1_muonAuthor
	virtual void Book_muon_1_muonAuthor(int bins, double min, double max);
	TH1F	*h_muon_1_muonAuthor;

	//Histogram declaration and booking function for muon_1_muonType
	virtual void Book_muon_1_muonType(int bins, double min, double max);
	TH1F	*h_muon_1_muonType;

	//Histogram declaration and booking function for muon_1_origin
	virtual void Book_muon_1_origin(int bins, double min, double max);
	TH1F	*h_muon_1_origin;

	//Histogram declaration and booking function for muon_1_q
	virtual void Book_muon_1_q(int bins, double min, double max);
	TH1F	*h_muon_1_q;

	//Histogram declaration and booking function for muon_1_trk_d0
	virtual void Book_muon_1_trk_d0(int bins, double min, double max);
	TH1F	*h_muon_1_trk_d0;

	//Histogram declaration and booking function for muon_1_trk_d0_sig
	virtual void Book_muon_1_trk_d0_sig(int bins, double min, double max);
	TH1F	*h_muon_1_trk_d0_sig;

	//Histogram declaration and booking function for muon_1_trk_pt_error
	virtual void Book_muon_1_trk_pt_error(int bins, double min, double max);
	TH1F	*h_muon_1_trk_pt_error;

	//Histogram declaration and booking function for muon_1_trk_pvx_z0
	virtual void Book_muon_1_trk_pvx_z0(int bins, double min, double max);
	TH1F	*h_muon_1_trk_pvx_z0;

	//Histogram declaration and booking function for muon_1_trk_pvx_z0_sig
	virtual void Book_muon_1_trk_pvx_z0_sig(int bins, double min, double max);
	TH1F	*h_muon_1_trk_pvx_z0_sig;

	//Histogram declaration and booking function for muon_1_trk_pvx_z0_sintheta
	virtual void Book_muon_1_trk_pvx_z0_sintheta(int bins, double min, double max);
	TH1F	*h_muon_1_trk_pvx_z0_sintheta;

	//Histogram declaration and booking function for muon_1_trk_vx
	virtual void Book_muon_1_trk_vx(int bins, double min, double max);
	TH1F	*h_muon_1_trk_vx;

	//Histogram declaration and booking function for muon_1_trk_z0
	virtual void Book_muon_1_trk_z0(int bins, double min, double max);
	TH1F	*h_muon_1_trk_z0;

	//Histogram declaration and booking function for muon_1_trk_z0_sig
	virtual void Book_muon_1_trk_z0_sig(int bins, double min, double max);
	TH1F	*h_muon_1_trk_z0_sig;

	//Histogram declaration and booking function for muon_1_trk_z0_sintheta
	virtual void Book_muon_1_trk_z0_sintheta(int bins, double min, double max);
	TH1F	*h_muon_1_trk_z0_sintheta;

	//Histogram declaration and booking function for muon_1_type
	virtual void Book_muon_1_type(int bins, double min, double max);
	TH1F	*h_muon_1_type;

	//Histogram declaration and booking function for n_actual_int
	virtual void Book_n_actual_int(int bins, double min, double max);
	TH1F	*h_n_actual_int;

	//Histogram declaration and booking function for n_avg_int
	virtual void Book_n_avg_int(int bins, double min, double max);
	TH1F	*h_n_avg_int;

	//Histogram declaration and booking function for n_avg_int_cor
	virtual void Book_n_avg_int_cor(int bins, double min, double max);
	TH1F	*h_n_avg_int_cor;

	//Histogram declaration and booking function for n_bjets
	virtual void Book_n_bjets(int bins, double min, double max);
	TH1F	*h_n_bjets;

	//Histogram declaration and booking function for n_electrons
	virtual void Book_n_electrons(int bins, double min, double max);
	TH1F	*h_n_electrons;

	//Histogram declaration and booking function for n_electrons_met
	virtual void Book_n_electrons_met(int bins, double min, double max);
	TH1F	*h_n_electrons_met;

	//Histogram declaration and booking function for n_electrons_olr
	virtual void Book_n_electrons_olr(int bins, double min, double max);
	TH1F	*h_n_electrons_olr;

	//Histogram declaration and booking function for n_jets
	virtual void Book_n_jets(int bins, double min, double max);
	TH1F	*h_n_jets;

	//Histogram declaration and booking function for n_jets_30
	virtual void Book_n_jets_30(int bins, double min, double max);
	TH1F	*h_n_jets_30;

	//Histogram declaration and booking function for n_jets_40
	virtual void Book_n_jets_40(int bins, double min, double max);
	TH1F	*h_n_jets_40;

	//Histogram declaration and booking function for n_jets_bad
	virtual void Book_n_jets_bad(int bins, double min, double max);
	TH1F	*h_n_jets_bad;

	//Histogram declaration and booking function for n_jets_mc_hs
	virtual void Book_n_jets_mc_hs(int bins, double min, double max);
	TH1F	*h_n_jets_mc_hs;

	//Histogram declaration and booking function for n_jets_met
	virtual void Book_n_jets_met(int bins, double min, double max);
	TH1F	*h_n_jets_met;

	//Histogram declaration and booking function for n_jets_olr
	virtual void Book_n_jets_olr(int bins, double min, double max);
	TH1F	*h_n_jets_olr;

	//Histogram declaration and booking function for n_muons
	virtual void Book_n_muons(int bins, double min, double max);
	TH1F	*h_n_muons;

	//Histogram declaration and booking function for n_muons_met
	virtual void Book_n_muons_met(int bins, double min, double max);
	TH1F	*h_n_muons_met;

	//Histogram declaration and booking function for n_muons_olr
	virtual void Book_n_muons_olr(int bins, double min, double max);
	TH1F	*h_n_muons_olr;

	//Histogram declaration and booking function for n_photons
	virtual void Book_n_photons(int bins, double min, double max);
	TH1F	*h_n_photons;

	//Histogram declaration and booking function for n_photons_met
	virtual void Book_n_photons_met(int bins, double min, double max);
	TH1F	*h_n_photons_met;

	//Histogram declaration and booking function for n_photons_olr
	virtual void Book_n_photons_olr(int bins, double min, double max);
	TH1F	*h_n_photons_olr;

	//Histogram declaration and booking function for n_pvx
	virtual void Book_n_pvx(int bins, double min, double max);
	TH1F	*h_n_pvx;

	//Histogram declaration and booking function for n_taus
	virtual void Book_n_taus(int bins, double min, double max);
	TH1F	*h_n_taus;

	//Histogram declaration and booking function for n_taus_loose
	virtual void Book_n_taus_loose(int bins, double min, double max);
	TH1F	*h_n_taus_loose;

	//Histogram declaration and booking function for n_taus_medium
	virtual void Book_n_taus_medium(int bins, double min, double max);
	TH1F	*h_n_taus_medium;

	//Histogram declaration and booking function for n_taus_met
	virtual void Book_n_taus_met(int bins, double min, double max);
	TH1F	*h_n_taus_met;

	//Histogram declaration and booking function for n_taus_olr
	virtual void Book_n_taus_olr(int bins, double min, double max);
	TH1F	*h_n_taus_olr;

	//Histogram declaration and booking function for n_taus_tight
	virtual void Book_n_taus_tight(int bins, double min, double max);
	TH1F	*h_n_taus_tight;

	//Histogram declaration and booking function for n_truth_gluon_jets
	virtual void Book_n_truth_gluon_jets(int bins, double min, double max);
	TH1F	*h_n_truth_gluon_jets;

	//Histogram declaration and booking function for n_truth_jets
	virtual void Book_n_truth_jets(int bins, double min, double max);
	TH1F	*h_n_truth_jets;

	//Histogram declaration and booking function for n_truth_jets_pt20_eta45
	virtual void Book_n_truth_jets_pt20_eta45(int bins, double min, double max);
	TH1F	*h_n_truth_jets_pt20_eta45;

	//Histogram declaration and booking function for n_truth_quark_jets
	virtual void Book_n_truth_quark_jets(int bins, double min, double max);
	TH1F	*h_n_truth_quark_jets;

	//Histogram declaration and booking function for n_vx
	virtual void Book_n_vx(int bins, double min, double max);
	TH1F	*h_n_vx;

	//Histogram declaration and booking function for run_number
	virtual void Book_run_number(int bins, double min, double max);
	TH1F	*h_run_number;

	//Histogram declaration and booking function for tau_0
	virtual void Book_tau_0(int bins, double min, double max);
	TH1F	*h_tau_0;

	//Histogram declaration and booking function for tau_0_NOMINAL_TauEffSF_HadTauEleOLR_tauhad
	virtual void Book_tau_0_NOMINAL_TauEffSF_HadTauEleOLR_tauhad(int bins, double min, double max);
	TH1F	*h_tau_0_NOMINAL_TauEffSF_HadTauEleOLR_tauhad;

	//Histogram declaration and booking function for tau_0_NOMINAL_TauEffSF_JetBDTloose
	virtual void Book_tau_0_NOMINAL_TauEffSF_JetBDTloose(int bins, double min, double max);
	TH1F	*h_tau_0_NOMINAL_TauEffSF_JetBDTloose;

	//Histogram declaration and booking function for tau_0_NOMINAL_TauEffSF_JetBDTmedium
	virtual void Book_tau_0_NOMINAL_TauEffSF_JetBDTmedium(int bins, double min, double max);
	TH1F	*h_tau_0_NOMINAL_TauEffSF_JetBDTmedium;

	//Histogram declaration and booking function for tau_0_NOMINAL_TauEffSF_JetBDTtight
	virtual void Book_tau_0_NOMINAL_TauEffSF_JetBDTtight(int bins, double min, double max);
	TH1F	*h_tau_0_NOMINAL_TauEffSF_JetBDTtight;

	//Histogram declaration and booking function for tau_0_NOMINAL_TauEffSF_LooseEleBDTPlusVeto_electron
	virtual void Book_tau_0_NOMINAL_TauEffSF_LooseEleBDTPlusVeto_electron(int bins, double min, double max);
	TH1F	*h_tau_0_NOMINAL_TauEffSF_LooseEleBDTPlusVeto_electron;

	//Histogram declaration and booking function for tau_0_NOMINAL_TauEffSF_LooseEleBDT_electron
	virtual void Book_tau_0_NOMINAL_TauEffSF_LooseEleBDT_electron(int bins, double min, double max);
	TH1F	*h_tau_0_NOMINAL_TauEffSF_LooseEleBDT_electron;

	//Histogram declaration and booking function for tau_0_NOMINAL_TauEffSF_MediumEleBDTPlusVeto_electron
	virtual void Book_tau_0_NOMINAL_TauEffSF_MediumEleBDTPlusVeto_electron(int bins, double min, double max);
	TH1F	*h_tau_0_NOMINAL_TauEffSF_MediumEleBDTPlusVeto_electron;

	//Histogram declaration and booking function for tau_0_NOMINAL_TauEffSF_MediumEleBDT_electron
	virtual void Book_tau_0_NOMINAL_TauEffSF_MediumEleBDT_electron(int bins, double min, double max);
	TH1F	*h_tau_0_NOMINAL_TauEffSF_MediumEleBDT_electron;

	//Histogram declaration and booking function for tau_0_NOMINAL_TauEffSF_VeryLooseLlhEleOLR_electron
	virtual void Book_tau_0_NOMINAL_TauEffSF_VeryLooseLlhEleOLR_electron(int bins, double min, double max);
	TH1F	*h_tau_0_NOMINAL_TauEffSF_VeryLooseLlhEleOLR_electron;

	//Histogram declaration and booking function for tau_0_NOMINAL_TauEffSF_reco
	virtual void Book_tau_0_NOMINAL_TauEffSF_reco(int bins, double min, double max);
	TH1F	*h_tau_0_NOMINAL_TauEffSF_reco;

	//Histogram declaration and booking function for tau_0_NOMINAL_TauEffSF_selection
	virtual void Book_tau_0_NOMINAL_TauEffSF_selection(int bins, double min, double max);
	TH1F	*h_tau_0_NOMINAL_TauEffSF_selection;

	//Histogram declaration and booking function for tau_0_PTV_score
	virtual void Book_tau_0_PTV_score(int bins, double min, double max);
	TH1F	*h_tau_0_PTV_score;

	//Histogram declaration and booking function for tau_0_allTrk_eta
	virtual void Book_tau_0_allTrk_eta(int bins, double min, double max);
	TH1F	*h_tau_0_allTrk_eta;

	//Histogram declaration and booking function for tau_0_allTrk_n
	virtual void Book_tau_0_allTrk_n(int bins, double min, double max);
	TH1F	*h_tau_0_allTrk_n;

	//Histogram declaration and booking function for tau_0_allTrk_phi
	virtual void Book_tau_0_allTrk_phi(int bins, double min, double max);
	TH1F	*h_tau_0_allTrk_phi;

	//Histogram declaration and booking function for tau_0_allTrk_pt
	virtual void Book_tau_0_allTrk_pt(int bins, double min, double max);
	TH1F	*h_tau_0_allTrk_pt;

	//Histogram declaration and booking function for tau_0_b_tag_score
	virtual void Book_tau_0_b_tag_score(int bins, double min, double max);
	TH1F	*h_tau_0_b_tag_score;

	//Histogram declaration and booking function for tau_0_b_tagged
	virtual void Book_tau_0_b_tagged(int bins, double min, double max);
	TH1F	*h_tau_0_b_tagged;

	//Histogram declaration and booking function for tau_0_decay_mode
	virtual void Book_tau_0_decay_mode(int bins, double min, double max);
	TH1F	*h_tau_0_decay_mode;

	//Histogram declaration and booking function for tau_0_ele_BDTEleScoreTrans_run2
	virtual void Book_tau_0_ele_BDTEleScoreTrans_run2(int bins, double min, double max);
	TH1F	*h_tau_0_ele_BDTEleScoreTrans_run2;

	//Histogram declaration and booking function for tau_0_ele_bdt_loose
	virtual void Book_tau_0_ele_bdt_loose(int bins, double min, double max);
	TH1F	*h_tau_0_ele_bdt_loose;

	//Histogram declaration and booking function for tau_0_ele_bdt_medium
	virtual void Book_tau_0_ele_bdt_medium(int bins, double min, double max);
	TH1F	*h_tau_0_ele_bdt_medium;

	//Histogram declaration and booking function for tau_0_ele_bdt_score
	virtual void Book_tau_0_ele_bdt_score(int bins, double min, double max);
	TH1F	*h_tau_0_ele_bdt_score;

	//Histogram declaration and booking function for tau_0_ele_bdt_tight
	virtual void Book_tau_0_ele_bdt_tight(int bins, double min, double max);
	TH1F	*h_tau_0_ele_bdt_tight;

	//Histogram declaration and booking function for tau_0_ele_match_lhscore
	virtual void Book_tau_0_ele_match_lhscore(int bins, double min, double max);
	TH1F	*h_tau_0_ele_match_lhscore;

	//Histogram declaration and booking function for tau_0_ele_olr_pass
	virtual void Book_tau_0_ele_olr_pass(int bins, double min, double max);
	TH1F	*h_tau_0_ele_olr_pass;

	//Histogram declaration and booking function for tau_0_jet_bdt_loose
	virtual void Book_tau_0_jet_bdt_loose(int bins, double min, double max);
	TH1F	*h_tau_0_jet_bdt_loose;

	//Histogram declaration and booking function for tau_0_jet_bdt_medium
	virtual void Book_tau_0_jet_bdt_medium(int bins, double min, double max);
	TH1F	*h_tau_0_jet_bdt_medium;

	//Histogram declaration and booking function for tau_0_jet_bdt_score
	virtual void Book_tau_0_jet_bdt_score(int bins, double min, double max);
	TH1F	*h_tau_0_jet_bdt_score;

	//Histogram declaration and booking function for tau_0_jet_bdt_score_trans
	virtual void Book_tau_0_jet_bdt_score_trans(int bins, double min, double max);
	TH1F	*h_tau_0_jet_bdt_score_trans;

	//Histogram declaration and booking function for tau_0_jet_bdt_tight
	virtual void Book_tau_0_jet_bdt_tight(int bins, double min, double max);
	TH1F	*h_tau_0_jet_bdt_tight;

	//Histogram declaration and booking function for tau_0_jet_jvt
	virtual void Book_tau_0_jet_jvt(int bins, double min, double max);
	TH1F	*h_tau_0_jet_jvt;

	//Histogram declaration and booking function for tau_0_jet_width
	virtual void Book_tau_0_jet_width(int bins, double min, double max);
	TH1F	*h_tau_0_jet_width;

	//Histogram declaration and booking function for tau_0_leadTrk_eta
	virtual void Book_tau_0_leadTrk_eta(int bins, double min, double max);
	TH1F	*h_tau_0_leadTrk_eta;

	//Histogram declaration and booking function for tau_0_leadTrk_phi
	virtual void Book_tau_0_leadTrk_phi(int bins, double min, double max);
	TH1F	*h_tau_0_leadTrk_phi;

	//Histogram declaration and booking function for tau_0_leadTrk_pt
	virtual void Book_tau_0_leadTrk_pt(int bins, double min, double max);
	TH1F	*h_tau_0_leadTrk_pt;

	//Histogram declaration and booking function for tau_0_n_all_tracks
	virtual void Book_tau_0_n_all_tracks(int bins, double min, double max);
	TH1F	*h_tau_0_n_all_tracks;

	//Histogram declaration and booking function for tau_0_n_charged_tracks
	virtual void Book_tau_0_n_charged_tracks(int bins, double min, double max);
	TH1F	*h_tau_0_n_charged_tracks;

	//Histogram declaration and booking function for tau_0_n_conversion_tracks
	virtual void Book_tau_0_n_conversion_tracks(int bins, double min, double max);
	TH1F	*h_tau_0_n_conversion_tracks;

	//Histogram declaration and booking function for tau_0_n_core_tracks
	virtual void Book_tau_0_n_core_tracks(int bins, double min, double max);
	TH1F	*h_tau_0_n_core_tracks;

	//Histogram declaration and booking function for tau_0_n_failTrackFilter_tracks
	virtual void Book_tau_0_n_failTrackFilter_tracks(int bins, double min, double max);
	TH1F	*h_tau_0_n_failTrackFilter_tracks;

	//Histogram declaration and booking function for tau_0_n_fake_tracks
	virtual void Book_tau_0_n_fake_tracks(int bins, double min, double max);
	TH1F	*h_tau_0_n_fake_tracks;

	//Histogram declaration and booking function for tau_0_n_isolation_tracks
	virtual void Book_tau_0_n_isolation_tracks(int bins, double min, double max);
	TH1F	*h_tau_0_n_isolation_tracks;

	//Histogram declaration and booking function for tau_0_n_modified_isolation_tracks
	virtual void Book_tau_0_n_modified_isolation_tracks(int bins, double min, double max);
	TH1F	*h_tau_0_n_modified_isolation_tracks;

	//Histogram declaration and booking function for tau_0_n_old_tracks
	virtual void Book_tau_0_n_old_tracks(int bins, double min, double max);
	TH1F	*h_tau_0_n_old_tracks;

	//Histogram declaration and booking function for tau_0_n_passTrkSelectionTight_tracks
	virtual void Book_tau_0_n_passTrkSelectionTight_tracks(int bins, double min, double max);
	TH1F	*h_tau_0_n_passTrkSelectionTight_tracks;

	//Histogram declaration and booking function for tau_0_n_passTrkSelector_tracks
	virtual void Book_tau_0_n_passTrkSelector_tracks(int bins, double min, double max);
	TH1F	*h_tau_0_n_passTrkSelector_tracks;

	//Histogram declaration and booking function for tau_0_n_unclassified_tracks
	virtual void Book_tau_0_n_unclassified_tracks(int bins, double min, double max);
	TH1F	*h_tau_0_n_unclassified_tracks;

	//Histogram declaration and booking function for tau_0_n_wide_tracks
	virtual void Book_tau_0_n_wide_tracks(int bins, double min, double max);
	TH1F	*h_tau_0_n_wide_tracks;

	//Histogram declaration and booking function for tau_0_origin
	virtual void Book_tau_0_origin(int bins, double min, double max);
	TH1F	*h_tau_0_origin;

	//Histogram declaration and booking function for tau_0_q
	virtual void Book_tau_0_q(int bins, double min, double max);
	TH1F	*h_tau_0_q;

	//Histogram declaration and booking function for tau_0_truth
	virtual void Book_tau_0_truth(int bins, double min, double max);
	TH1F	*h_tau_0_truth;

	//Histogram declaration and booking function for tau_0_truth_classifierParticleOrigin
	virtual void Book_tau_0_truth_classifierParticleOrigin(int bins, double min, double max);
	TH1F	*h_tau_0_truth_classifierParticleOrigin;

	//Histogram declaration and booking function for tau_0_truth_classifierParticleType
	virtual void Book_tau_0_truth_classifierParticleType(int bins, double min, double max);
	TH1F	*h_tau_0_truth_classifierParticleType;

	//Histogram declaration and booking function for tau_0_truth_decay_mode
	virtual void Book_tau_0_truth_decay_mode(int bins, double min, double max);
	TH1F	*h_tau_0_truth_decay_mode;

	//Histogram declaration and booking function for tau_0_truth_isEle
	virtual void Book_tau_0_truth_isEle(int bins, double min, double max);
	TH1F	*h_tau_0_truth_isEle;

	//Histogram declaration and booking function for tau_0_truth_isHadTau
	virtual void Book_tau_0_truth_isHadTau(int bins, double min, double max);
	TH1F	*h_tau_0_truth_isHadTau;

	//Histogram declaration and booking function for tau_0_truth_isJet
	virtual void Book_tau_0_truth_isJet(int bins, double min, double max);
	TH1F	*h_tau_0_truth_isJet;

	//Histogram declaration and booking function for tau_0_truth_isMuon
	virtual void Book_tau_0_truth_isMuon(int bins, double min, double max);
	TH1F	*h_tau_0_truth_isMuon;

	//Histogram declaration and booking function for tau_0_truth_isTau
	virtual void Book_tau_0_truth_isTau(int bins, double min, double max);
	TH1F	*h_tau_0_truth_isTau;

	//Histogram declaration and booking function for tau_0_truth_mother_pdgId
	virtual void Book_tau_0_truth_mother_pdgId(int bins, double min, double max);
	TH1F	*h_tau_0_truth_mother_pdgId;

	//Histogram declaration and booking function for tau_0_truth_mother_status
	virtual void Book_tau_0_truth_mother_status(int bins, double min, double max);
	TH1F	*h_tau_0_truth_mother_status;

	//Histogram declaration and booking function for tau_0_truth_n_charged
	virtual void Book_tau_0_truth_n_charged(int bins, double min, double max);
	TH1F	*h_tau_0_truth_n_charged;

	//Histogram declaration and booking function for tau_0_truth_n_charged_pion
	virtual void Book_tau_0_truth_n_charged_pion(int bins, double min, double max);
	TH1F	*h_tau_0_truth_n_charged_pion;

	//Histogram declaration and booking function for tau_0_truth_n_neutral
	virtual void Book_tau_0_truth_n_neutral(int bins, double min, double max);
	TH1F	*h_tau_0_truth_n_neutral;

	//Histogram declaration and booking function for tau_0_truth_n_neutral_pion
	virtual void Book_tau_0_truth_n_neutral_pion(int bins, double min, double max);
	TH1F	*h_tau_0_truth_n_neutral_pion;

	//Histogram declaration and booking function for tau_0_truth_origin
	virtual void Book_tau_0_truth_origin(int bins, double min, double max);
	TH1F	*h_tau_0_truth_origin;

	//Histogram declaration and booking function for tau_0_truth_pdgId
	virtual void Book_tau_0_truth_pdgId(int bins, double min, double max);
	TH1F	*h_tau_0_truth_pdgId;

	//Histogram declaration and booking function for tau_0_truth_q
	virtual void Book_tau_0_truth_q(int bins, double min, double max);
	TH1F	*h_tau_0_truth_q;

	//Histogram declaration and booking function for tau_0_truth_status
	virtual void Book_tau_0_truth_status(int bins, double min, double max);
	TH1F	*h_tau_0_truth_status;

	//Histogram declaration and booking function for tau_0_truth_type
	virtual void Book_tau_0_truth_type(int bins, double min, double max);
	TH1F	*h_tau_0_truth_type;

	//Histogram declaration and booking function for tau_0_type
	virtual void Book_tau_0_type(int bins, double min, double max);
	TH1F	*h_tau_0_type;

	//Histogram declaration and booking function for tau_1
	virtual void Book_tau_1(int bins, double min, double max);
	TH1F	*h_tau_1;

	//Histogram declaration and booking function for tau_1_NOMINAL_TauEffSF_HadTauEleOLR_tauhad
	virtual void Book_tau_1_NOMINAL_TauEffSF_HadTauEleOLR_tauhad(int bins, double min, double max);
	TH1F	*h_tau_1_NOMINAL_TauEffSF_HadTauEleOLR_tauhad;

	//Histogram declaration and booking function for tau_1_NOMINAL_TauEffSF_JetBDTloose
	virtual void Book_tau_1_NOMINAL_TauEffSF_JetBDTloose(int bins, double min, double max);
	TH1F	*h_tau_1_NOMINAL_TauEffSF_JetBDTloose;

	//Histogram declaration and booking function for tau_1_NOMINAL_TauEffSF_JetBDTmedium
	virtual void Book_tau_1_NOMINAL_TauEffSF_JetBDTmedium(int bins, double min, double max);
	TH1F	*h_tau_1_NOMINAL_TauEffSF_JetBDTmedium;

	//Histogram declaration and booking function for tau_1_NOMINAL_TauEffSF_JetBDTtight
	virtual void Book_tau_1_NOMINAL_TauEffSF_JetBDTtight(int bins, double min, double max);
	TH1F	*h_tau_1_NOMINAL_TauEffSF_JetBDTtight;

	//Histogram declaration and booking function for tau_1_NOMINAL_TauEffSF_LooseEleBDTPlusVeto_electron
	virtual void Book_tau_1_NOMINAL_TauEffSF_LooseEleBDTPlusVeto_electron(int bins, double min, double max);
	TH1F	*h_tau_1_NOMINAL_TauEffSF_LooseEleBDTPlusVeto_electron;

	//Histogram declaration and booking function for tau_1_NOMINAL_TauEffSF_LooseEleBDT_electron
	virtual void Book_tau_1_NOMINAL_TauEffSF_LooseEleBDT_electron(int bins, double min, double max);
	TH1F	*h_tau_1_NOMINAL_TauEffSF_LooseEleBDT_electron;

	//Histogram declaration and booking function for tau_1_NOMINAL_TauEffSF_MediumEleBDTPlusVeto_electron
	virtual void Book_tau_1_NOMINAL_TauEffSF_MediumEleBDTPlusVeto_electron(int bins, double min, double max);
	TH1F	*h_tau_1_NOMINAL_TauEffSF_MediumEleBDTPlusVeto_electron;

	//Histogram declaration and booking function for tau_1_NOMINAL_TauEffSF_MediumEleBDT_electron
	virtual void Book_tau_1_NOMINAL_TauEffSF_MediumEleBDT_electron(int bins, double min, double max);
	TH1F	*h_tau_1_NOMINAL_TauEffSF_MediumEleBDT_electron;

	//Histogram declaration and booking function for tau_1_NOMINAL_TauEffSF_VeryLooseLlhEleOLR_electron
	virtual void Book_tau_1_NOMINAL_TauEffSF_VeryLooseLlhEleOLR_electron(int bins, double min, double max);
	TH1F	*h_tau_1_NOMINAL_TauEffSF_VeryLooseLlhEleOLR_electron;

	//Histogram declaration and booking function for tau_1_NOMINAL_TauEffSF_reco
	virtual void Book_tau_1_NOMINAL_TauEffSF_reco(int bins, double min, double max);
	TH1F	*h_tau_1_NOMINAL_TauEffSF_reco;

	//Histogram declaration and booking function for tau_1_NOMINAL_TauEffSF_selection
	virtual void Book_tau_1_NOMINAL_TauEffSF_selection(int bins, double min, double max);
	TH1F	*h_tau_1_NOMINAL_TauEffSF_selection;

	//Histogram declaration and booking function for tau_1_PTV_score
	virtual void Book_tau_1_PTV_score(int bins, double min, double max);
	TH1F	*h_tau_1_PTV_score;

	//Histogram declaration and booking function for tau_1_allTrk_eta
	virtual void Book_tau_1_allTrk_eta(int bins, double min, double max);
	TH1F	*h_tau_1_allTrk_eta;

	//Histogram declaration and booking function for tau_1_allTrk_n
	virtual void Book_tau_1_allTrk_n(int bins, double min, double max);
	TH1F	*h_tau_1_allTrk_n;

	//Histogram declaration and booking function for tau_1_allTrk_phi
	virtual void Book_tau_1_allTrk_phi(int bins, double min, double max);
	TH1F	*h_tau_1_allTrk_phi;

	//Histogram declaration and booking function for tau_1_allTrk_pt
	virtual void Book_tau_1_allTrk_pt(int bins, double min, double max);
	TH1F	*h_tau_1_allTrk_pt;

	//Histogram declaration and booking function for tau_1_b_tag_score
	virtual void Book_tau_1_b_tag_score(int bins, double min, double max);
	TH1F	*h_tau_1_b_tag_score;

	//Histogram declaration and booking function for tau_1_b_tagged
	virtual void Book_tau_1_b_tagged(int bins, double min, double max);
	TH1F	*h_tau_1_b_tagged;

	//Histogram declaration and booking function for tau_1_decay_mode
	virtual void Book_tau_1_decay_mode(int bins, double min, double max);
	TH1F	*h_tau_1_decay_mode;

	//Histogram declaration and booking function for tau_1_ele_BDTEleScoreTrans_run2
	virtual void Book_tau_1_ele_BDTEleScoreTrans_run2(int bins, double min, double max);
	TH1F	*h_tau_1_ele_BDTEleScoreTrans_run2;

	//Histogram declaration and booking function for tau_1_ele_bdt_loose
	virtual void Book_tau_1_ele_bdt_loose(int bins, double min, double max);
	TH1F	*h_tau_1_ele_bdt_loose;

	//Histogram declaration and booking function for tau_1_ele_bdt_medium
	virtual void Book_tau_1_ele_bdt_medium(int bins, double min, double max);
	TH1F	*h_tau_1_ele_bdt_medium;

	//Histogram declaration and booking function for tau_1_ele_bdt_score
	virtual void Book_tau_1_ele_bdt_score(int bins, double min, double max);
	TH1F	*h_tau_1_ele_bdt_score;

	//Histogram declaration and booking function for tau_1_ele_bdt_tight
	virtual void Book_tau_1_ele_bdt_tight(int bins, double min, double max);
	TH1F	*h_tau_1_ele_bdt_tight;

	//Histogram declaration and booking function for tau_1_ele_match_lhscore
	virtual void Book_tau_1_ele_match_lhscore(int bins, double min, double max);
	TH1F	*h_tau_1_ele_match_lhscore;

	//Histogram declaration and booking function for tau_1_ele_olr_pass
	virtual void Book_tau_1_ele_olr_pass(int bins, double min, double max);
	TH1F	*h_tau_1_ele_olr_pass;

	//Histogram declaration and booking function for tau_1_jet_bdt_loose
	virtual void Book_tau_1_jet_bdt_loose(int bins, double min, double max);
	TH1F	*h_tau_1_jet_bdt_loose;

	//Histogram declaration and booking function for tau_1_jet_bdt_medium
	virtual void Book_tau_1_jet_bdt_medium(int bins, double min, double max);
	TH1F	*h_tau_1_jet_bdt_medium;

	//Histogram declaration and booking function for tau_1_jet_bdt_score
	virtual void Book_tau_1_jet_bdt_score(int bins, double min, double max);
	TH1F	*h_tau_1_jet_bdt_score;

	//Histogram declaration and booking function for tau_1_jet_bdt_score_trans
	virtual void Book_tau_1_jet_bdt_score_trans(int bins, double min, double max);
	TH1F	*h_tau_1_jet_bdt_score_trans;

	//Histogram declaration and booking function for tau_1_jet_bdt_tight
	virtual void Book_tau_1_jet_bdt_tight(int bins, double min, double max);
	TH1F	*h_tau_1_jet_bdt_tight;

	//Histogram declaration and booking function for tau_1_jet_jvt
	virtual void Book_tau_1_jet_jvt(int bins, double min, double max);
	TH1F	*h_tau_1_jet_jvt;

	//Histogram declaration and booking function for tau_1_jet_width
	virtual void Book_tau_1_jet_width(int bins, double min, double max);
	TH1F	*h_tau_1_jet_width;

	//Histogram declaration and booking function for tau_1_leadTrk_eta
	virtual void Book_tau_1_leadTrk_eta(int bins, double min, double max);
	TH1F	*h_tau_1_leadTrk_eta;

	//Histogram declaration and booking function for tau_1_leadTrk_phi
	virtual void Book_tau_1_leadTrk_phi(int bins, double min, double max);
	TH1F	*h_tau_1_leadTrk_phi;

	//Histogram declaration and booking function for tau_1_leadTrk_pt
	virtual void Book_tau_1_leadTrk_pt(int bins, double min, double max);
	TH1F	*h_tau_1_leadTrk_pt;

	//Histogram declaration and booking function for tau_1_n_all_tracks
	virtual void Book_tau_1_n_all_tracks(int bins, double min, double max);
	TH1F	*h_tau_1_n_all_tracks;

	//Histogram declaration and booking function for tau_1_n_charged_tracks
	virtual void Book_tau_1_n_charged_tracks(int bins, double min, double max);
	TH1F	*h_tau_1_n_charged_tracks;

	//Histogram declaration and booking function for tau_1_n_conversion_tracks
	virtual void Book_tau_1_n_conversion_tracks(int bins, double min, double max);
	TH1F	*h_tau_1_n_conversion_tracks;

	//Histogram declaration and booking function for tau_1_n_core_tracks
	virtual void Book_tau_1_n_core_tracks(int bins, double min, double max);
	TH1F	*h_tau_1_n_core_tracks;

	//Histogram declaration and booking function for tau_1_n_failTrackFilter_tracks
	virtual void Book_tau_1_n_failTrackFilter_tracks(int bins, double min, double max);
	TH1F	*h_tau_1_n_failTrackFilter_tracks;

	//Histogram declaration and booking function for tau_1_n_fake_tracks
	virtual void Book_tau_1_n_fake_tracks(int bins, double min, double max);
	TH1F	*h_tau_1_n_fake_tracks;

	//Histogram declaration and booking function for tau_1_n_isolation_tracks
	virtual void Book_tau_1_n_isolation_tracks(int bins, double min, double max);
	TH1F	*h_tau_1_n_isolation_tracks;

	//Histogram declaration and booking function for tau_1_n_modified_isolation_tracks
	virtual void Book_tau_1_n_modified_isolation_tracks(int bins, double min, double max);
	TH1F	*h_tau_1_n_modified_isolation_tracks;

	//Histogram declaration and booking function for tau_1_n_old_tracks
	virtual void Book_tau_1_n_old_tracks(int bins, double min, double max);
	TH1F	*h_tau_1_n_old_tracks;

	//Histogram declaration and booking function for tau_1_n_passTrkSelectionTight_tracks
	virtual void Book_tau_1_n_passTrkSelectionTight_tracks(int bins, double min, double max);
	TH1F	*h_tau_1_n_passTrkSelectionTight_tracks;

	//Histogram declaration and booking function for tau_1_n_passTrkSelector_tracks
	virtual void Book_tau_1_n_passTrkSelector_tracks(int bins, double min, double max);
	TH1F	*h_tau_1_n_passTrkSelector_tracks;

	//Histogram declaration and booking function for tau_1_n_unclassified_tracks
	virtual void Book_tau_1_n_unclassified_tracks(int bins, double min, double max);
	TH1F	*h_tau_1_n_unclassified_tracks;

	//Histogram declaration and booking function for tau_1_n_wide_tracks
	virtual void Book_tau_1_n_wide_tracks(int bins, double min, double max);
	TH1F	*h_tau_1_n_wide_tracks;

	//Histogram declaration and booking function for tau_1_origin
	virtual void Book_tau_1_origin(int bins, double min, double max);
	TH1F	*h_tau_1_origin;

	//Histogram declaration and booking function for tau_1_q
	virtual void Book_tau_1_q(int bins, double min, double max);
	TH1F	*h_tau_1_q;

	//Histogram declaration and booking function for tau_1_truth
	virtual void Book_tau_1_truth(int bins, double min, double max);
	TH1F	*h_tau_1_truth;

	//Histogram declaration and booking function for tau_1_truth_classifierParticleOrigin
	virtual void Book_tau_1_truth_classifierParticleOrigin(int bins, double min, double max);
	TH1F	*h_tau_1_truth_classifierParticleOrigin;

	//Histogram declaration and booking function for tau_1_truth_classifierParticleType
	virtual void Book_tau_1_truth_classifierParticleType(int bins, double min, double max);
	TH1F	*h_tau_1_truth_classifierParticleType;

	//Histogram declaration and booking function for tau_1_truth_decay_mode
	virtual void Book_tau_1_truth_decay_mode(int bins, double min, double max);
	TH1F	*h_tau_1_truth_decay_mode;

	//Histogram declaration and booking function for tau_1_truth_isEle
	virtual void Book_tau_1_truth_isEle(int bins, double min, double max);
	TH1F	*h_tau_1_truth_isEle;

	//Histogram declaration and booking function for tau_1_truth_isHadTau
	virtual void Book_tau_1_truth_isHadTau(int bins, double min, double max);
	TH1F	*h_tau_1_truth_isHadTau;

	//Histogram declaration and booking function for tau_1_truth_isJet
	virtual void Book_tau_1_truth_isJet(int bins, double min, double max);
	TH1F	*h_tau_1_truth_isJet;

	//Histogram declaration and booking function for tau_1_truth_isMuon
	virtual void Book_tau_1_truth_isMuon(int bins, double min, double max);
	TH1F	*h_tau_1_truth_isMuon;

	//Histogram declaration and booking function for tau_1_truth_isTau
	virtual void Book_tau_1_truth_isTau(int bins, double min, double max);
	TH1F	*h_tau_1_truth_isTau;

	//Histogram declaration and booking function for tau_1_truth_mother_pdgId
	virtual void Book_tau_1_truth_mother_pdgId(int bins, double min, double max);
	TH1F	*h_tau_1_truth_mother_pdgId;

	//Histogram declaration and booking function for tau_1_truth_mother_status
	virtual void Book_tau_1_truth_mother_status(int bins, double min, double max);
	TH1F	*h_tau_1_truth_mother_status;

	//Histogram declaration and booking function for tau_1_truth_n_charged
	virtual void Book_tau_1_truth_n_charged(int bins, double min, double max);
	TH1F	*h_tau_1_truth_n_charged;

	//Histogram declaration and booking function for tau_1_truth_n_charged_pion
	virtual void Book_tau_1_truth_n_charged_pion(int bins, double min, double max);
	TH1F	*h_tau_1_truth_n_charged_pion;

	//Histogram declaration and booking function for tau_1_truth_n_neutral
	virtual void Book_tau_1_truth_n_neutral(int bins, double min, double max);
	TH1F	*h_tau_1_truth_n_neutral;

	//Histogram declaration and booking function for tau_1_truth_n_neutral_pion
	virtual void Book_tau_1_truth_n_neutral_pion(int bins, double min, double max);
	TH1F	*h_tau_1_truth_n_neutral_pion;

	//Histogram declaration and booking function for tau_1_truth_origin
	virtual void Book_tau_1_truth_origin(int bins, double min, double max);
	TH1F	*h_tau_1_truth_origin;

	//Histogram declaration and booking function for tau_1_truth_pdgId
	virtual void Book_tau_1_truth_pdgId(int bins, double min, double max);
	TH1F	*h_tau_1_truth_pdgId;

	//Histogram declaration and booking function for tau_1_truth_q
	virtual void Book_tau_1_truth_q(int bins, double min, double max);
	TH1F	*h_tau_1_truth_q;

	//Histogram declaration and booking function for tau_1_truth_status
	virtual void Book_tau_1_truth_status(int bins, double min, double max);
	TH1F	*h_tau_1_truth_status;

	//Histogram declaration and booking function for tau_1_truth_type
	virtual void Book_tau_1_truth_type(int bins, double min, double max);
	TH1F	*h_tau_1_truth_type;

	//Histogram declaration and booking function for tau_1_type
	virtual void Book_tau_1_type(int bins, double min, double max);
	TH1F	*h_tau_1_type;

	//Histogram declaration and booking function for weight_mc
	virtual void Book_weight_mc(int bins, double min, double max);
	TH1F	*h_weight_mc;

	//Histogram declaration and booking function for weight_total
	virtual void Book_weight_total(int bins, double min, double max);
	TH1F	*h_weight_total;

